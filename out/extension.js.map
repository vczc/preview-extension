{
  "version": 3,
  "sources": ["../node_modules/sudo-prompt/index.js", "../node_modules/dotenv/package.json", "../node_modules/dotenv/lib/main.js", "../src-extension/extension.ts", "../src-extension/registryCommanders.ts", "../src-extension/zopCompileDebugView.ts", "../src-extension/utils/index.ts", "../src-extension/constants/config.ts", "../src-extension/webview.ts", "../src-extension/handleMessageFromWebview.ts", "../src-extension/utils/common.ts", "../src-extension/initProject.ts", "../src-extension/zopCodeGenerateView.ts", "../src-extension/zopSettingsView.ts", "../src-extension/zopServiceDebugView.ts"],
  "sourcesContent": ["var Node = {\n  child: require('child_process'),\n  crypto: require('crypto'),\n  fs: require('fs'),\n  os: require('os'),\n  path: require('path'),\n  process: process,\n  util: require('util')\n};\n\nfunction Attempt(instance, end) {\n  var platform = Node.process.platform;\n  if (platform === 'darwin') return Mac(instance, end);\n  if (platform === 'linux') return Linux(instance, end);\n  if (platform === 'win32') return Windows(instance, end);\n  end(new Error('Platform not yet supported.'));\n}\n\nfunction EscapeDoubleQuotes(string) {\n  if (typeof string !== 'string') throw new Error('Expected a string.');\n  return string.replace(/\"/g, '\\\\\"');\n}\n\nfunction Exec() {\n  if (arguments.length < 1 || arguments.length > 3) {\n    throw new Error('Wrong number of arguments.');\n  }\n  var command = arguments[0];\n  var options = {};\n  var end = function() {};\n  if (typeof command !== 'string') {\n    throw new Error('Command should be a string.');\n  }\n  if (arguments.length === 2) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else if (Node.util.isFunction(arguments[1])) {\n      end = arguments[1];\n    } else {\n      throw new Error('Expected options or callback.');\n    }\n  } else if (arguments.length === 3) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else {\n      throw new Error('Expected options to be an object.');\n    }\n    if (Node.util.isFunction(arguments[2])) {\n      end = arguments[2];\n    } else {\n      throw new Error('Expected callback to be a function.');\n    }\n  }\n  if (/^sudo/i.test(command)) {\n    return end(new Error('Command should not be prefixed with \"sudo\".'));\n  }\n  if (typeof options.name === 'undefined') {\n    var title = Node.process.title;\n    if (ValidName(title)) {\n      options.name = title;\n    } else {\n      return end(new Error('process.title cannot be used as a valid name.'));\n    }\n  } else if (!ValidName(options.name)) {\n    var error = '';\n    error += 'options.name must be alphanumeric only ';\n    error += '(spaces are allowed) and <= 70 characters.';\n    return end(new Error(error));\n  }\n  if (typeof options.icns !== 'undefined') {\n    if (typeof options.icns !== 'string') {\n      return end(new Error('options.icns must be a string if provided.'));\n    } else if (options.icns.trim().length === 0) {\n      return end(new Error('options.icns must not be empty if provided.'));\n    }\n  }\n  if (typeof options.env !== 'undefined') {\n    if (typeof options.env !== 'object') {\n      return end(new Error('options.env must be an object if provided.'));\n    } else if (Object.keys(options.env).length === 0) {\n      return end(new Error('options.env must not be empty if provided.'));\n    } else {\n      for (var key in options.env) {\n        var value = options.env[key];\n        if (typeof key !== 'string' || typeof value !== 'string') {\n          return end(\n            new Error('options.env environment variables must be strings.')\n          );\n        }\n        // \"Environment variable names used by the utilities in the Shell and\n        // Utilities volume of IEEE Std 1003.1-2001 consist solely of uppercase\n        // letters, digits, and the '_' (underscore) from the characters defined\n        // in Portable Character Set and do not begin with a digit. Other\n        // characters may be permitted by an implementation; applications shall\n        // tolerate the presence of such names.\"\n        if (!/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(key)) {\n          return end(\n            new Error(\n              'options.env has an invalid environment variable name: ' +\n              JSON.stringify(key)\n            )\n          );\n        }\n        if (/[\\r\\n]/.test(value)) {\n          return end(\n            new Error(\n              'options.env has an invalid environment variable value: ' +\n              JSON.stringify(value)\n            )\n          );\n        }\n      }\n    }\n  }\n  var platform = Node.process.platform;\n  if (platform !== 'darwin' && platform !== 'linux' && platform !== 'win32') {\n    return end(new Error('Platform not yet supported.'));\n  }\n  var instance = {\n    command: command,\n    options: options,\n    uuid: undefined,\n    path: undefined\n  };\n  Attempt(instance, end);\n}\n\nfunction Linux(instance, end) {\n  LinuxBinary(instance,\n    function(error, binary) {\n      if (error) return end(error);\n      var command = [];\n      // Preserve current working directory:\n      command.push('cd \"' + EscapeDoubleQuotes(Node.process.cwd()) + '\";');\n      // Export environment variables:\n      for (var key in instance.options.env) {\n        var value = instance.options.env[key];\n        command.push('export ' + key + '=\"' + EscapeDoubleQuotes(value) + '\";');\n      }\n      command.push('\"' + EscapeDoubleQuotes(binary) + '\"');\n      if (/kdesudo/i.test(binary)) {\n        command.push(\n          '--comment',\n          '\"' + instance.options.name + ' wants to make changes. ' +\n          'Enter your password to allow this.\"'\n        );\n        command.push('-d'); // Do not show the command to be run in the dialog.\n        command.push('--');\n      } else if (/pkexec/i.test(binary)) {\n        command.push('--disable-internal-agent');\n      }\n      var magic = 'SUDOPROMPT\\n';\n      command.push(\n        '/bin/bash -c \"echo ' + EscapeDoubleQuotes(magic.trim()) + '; ' +\n        EscapeDoubleQuotes(instance.command) +\n        '\"'\n      );\n      command = command.join(' ');\n      Node.child.exec(command, { encoding: 'utf-8', maxBuffer: MAX_BUFFER },\n        function(error, stdout, stderr) {\n          // ISSUE 88:\n          // We must distinguish between elevation errors and command errors.\n          //\n          // KDESUDO:\n          // kdesudo provides no way to do this. We add a magic marker to know\n          // if elevation succeeded. Any error thereafter is a command error.\n          //\n          // PKEXEC:\n          // \"Upon successful completion, the return value is the return value of\n          // PROGRAM. If the calling process is not authorized or an\n          // authorization could not be obtained through authentication or an\n          // error occured, pkexec exits with a return value of 127. If the\n          // authorization could not be obtained because the user dismissed the\n          // authentication dialog, pkexec exits with a return value of 126.\"\n          //\n          // However, we do not rely on pkexec's return of 127 since our magic\n          // marker is more reliable, and we already use it for kdesudo.\n          var elevated = stdout && stdout.slice(0, magic.length) === magic;\n          if (elevated) stdout = stdout.slice(magic.length);\n          // Only normalize the error if it is definitely not a command error:\n          // In other words, if we know that the command was never elevated.\n          // We do not inspect error messages beyond NO_POLKIT_AGENT.\n          // We cannot rely on English errors because of internationalization.\n          if (error && !elevated) {\n            if (/No authentication agent found/.test(stderr)) {\n              error.message = NO_POLKIT_AGENT;\n            } else {\n              error.message = PERMISSION_DENIED;\n            }\n          }\n          end(error, stdout, stderr);\n        }\n      );\n    }\n  );\n}\n\nfunction LinuxBinary(instance, end) {\n  var index = 0;\n  // We used to prefer gksudo over pkexec since it enabled a better prompt.\n  // However, gksudo cannot run multiple commands concurrently.\n  var paths = ['/usr/bin/kdesudo', '/usr/bin/pkexec'];\n  function test() {\n    if (index === paths.length) {\n      return end(new Error('Unable to find pkexec or kdesudo.'));\n    }\n    var path = paths[index++];\n    Node.fs.stat(path,\n      function(error) {\n        if (error) {\n          if (error.code === 'ENOTDIR') return test();\n          if (error.code === 'ENOENT') return test();\n          end(error);\n        } else {\n          end(undefined, path);\n        }\n      }\n    );\n  }\n  test();\n}\n\nfunction Mac(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  var user = Node.process.env.USER; // Applet shell scripts require $USER.\n  if (!user) return callback(new Error('env[\\'USER\\'] not defined.'));\n  UUID(instance,\n    function(error, uuid) {\n      if (error) return callback(error);\n      instance.uuid = uuid;\n      instance.path = Node.path.join(\n        temp,\n        instance.uuid,\n        instance.options.name + '.app'\n      );\n      function end(error, stdout, stderr) {\n        Remove(Node.path.dirname(instance.path),\n          function(errorRemove) {\n            if (error) return callback(error);\n            if (errorRemove) return callback(errorRemove);\n            callback(undefined, stdout, stderr);\n          }\n        );\n      }\n      MacApplet(instance,\n        function(error, stdout, stderr) {\n          if (error) return end(error, stdout, stderr);\n          MacIcon(instance,\n            function(error) {\n              if (error) return end(error);\n              MacPropertyList(instance,\n                function(error, stdout, stderr) {\n                  if (error) return end(error, stdout, stderr);\n                  MacCommand(instance,\n                    function(error) {\n                      if (error) return end(error);\n                      MacOpen(instance,\n                        function(error, stdout, stderr) {\n                          if (error) return end(error, stdout, stderr);\n                          MacResult(instance, end);\n                        }\n                      );\n                    }\n                  );\n                }\n              );\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction MacApplet(instance, end) {\n  var parent = Node.path.dirname(instance.path);\n  Node.fs.mkdir(parent,\n    function(error) {\n      if (error) return end(error);\n      var zip = Node.path.join(parent, 'sudo-prompt-applet.zip');\n      Node.fs.writeFile(zip, APPLET, 'base64',\n        function(error) {\n          if (error) return end(error);\n          var command = [];\n          command.push('/usr/bin/unzip');\n          command.push('-o'); // Overwrite any existing applet.\n          command.push('\"' + EscapeDoubleQuotes(zip) + '\"');\n          command.push('-d \"' + EscapeDoubleQuotes(instance.path) + '\"');\n          command = command.join(' ');\n          Node.child.exec(command, { encoding: 'utf-8' }, end);\n        }\n      );\n    }\n  );\n}\n\nfunction MacCommand(instance, end) {\n  var path = Node.path.join(\n    instance.path,\n    'Contents',\n    'MacOS',\n    'sudo-prompt-command'\n  );\n  var script = [];\n  // Preserve current working directory:\n  // We do this for commands that rely on relative paths.\n  // This runs in a subshell and will not change the cwd of sudo-prompt-script.\n  script.push('cd \"' + EscapeDoubleQuotes(Node.process.cwd()) + '\"');\n  // Export environment variables:\n  for (var key in instance.options.env) {\n    var value = instance.options.env[key];\n    script.push('export ' + key + '=\"' + EscapeDoubleQuotes(value) + '\"');\n  }\n  script.push(instance.command);\n  script = script.join('\\n');\n  Node.fs.writeFile(path, script, 'utf-8', end);\n}\n\nfunction MacIcon(instance, end) {\n  if (!instance.options.icns) return end();\n  Node.fs.readFile(instance.options.icns,\n    function(error, buffer) {\n      if (error) return end(error);\n      var icns = Node.path.join(\n        instance.path,\n        'Contents',\n        'Resources',\n        'applet.icns'\n      );\n      Node.fs.writeFile(icns, buffer, end);\n    }\n  );\n}\n\nfunction MacOpen(instance, end) {\n  // We must run the binary directly so that the cwd will apply.\n  var binary = Node.path.join(instance.path, 'Contents', 'MacOS', 'applet');\n  // We must set the cwd so that the AppleScript can find the shell scripts.\n  var options = {\n    cwd: Node.path.dirname(binary),\n    encoding: 'utf-8'\n  };\n  // We use the relative path rather than the absolute path. The instance.path\n  // may contain spaces which the cwd can handle, but which exec() cannot.\n  Node.child.exec('./' + Node.path.basename(binary), options, end);\n}\n\nfunction MacPropertyList(instance, end) {\n  // Value must be in single quotes (not double quotes) according to man entry.\n  // e.g. defaults write com.companyname.appname \"Default Color\" '(255, 0, 0)'\n  // The defaults command will be changed in an upcoming major release to only\n  // operate on preferences domains. General plist manipulation utilities will\n  // be folded into a different command-line program.\n  var plist = Node.path.join(instance.path, 'Contents', 'Info.plist');\n  var path = EscapeDoubleQuotes(plist);\n  var key = EscapeDoubleQuotes('CFBundleName');\n  var value = instance.options.name + ' Password Prompt';\n  if (/'/.test(value)) {\n    return end(new Error('Value should not contain single quotes.'));\n  }\n  var command = [];\n  command.push('/usr/bin/defaults');\n  command.push('write');\n  command.push('\"' + path + '\"');\n  command.push('\"' + key + '\"');\n  command.push(\"'\" + value + \"'\"); // We must use single quotes for value.\n  command = command.join(' ');\n  Node.child.exec(command, { encoding: 'utf-8' }, end);\n}\n\nfunction MacResult(instance, end) {\n  var cwd = Node.path.join(instance.path, 'Contents', 'MacOS');\n  Node.fs.readFile(Node.path.join(cwd, 'code'), 'utf-8',\n    function(error, code) {\n      if (error) {\n        if (error.code === 'ENOENT') return end(new Error(PERMISSION_DENIED));\n        end(error);\n      } else {\n        Node.fs.readFile(Node.path.join(cwd, 'stdout'), 'utf-8',\n          function(error, stdout) {\n            if (error) return end(error);\n            Node.fs.readFile(Node.path.join(cwd, 'stderr'), 'utf-8',\n              function(error, stderr) {\n                if (error) return end(error);\n                code = parseInt(code.trim(), 10); // Includes trailing newline.\n                if (code === 0) {\n                  end(undefined, stdout, stderr);\n                } else {\n                  error = new Error(\n                    'Command failed: ' + instance.command + '\\n' + stderr\n                  );\n                  error.code = code;\n                  end(error, stdout, stderr);\n                }\n              }\n            );\n          }\n        );\n      }\n    }\n  );\n}\n\nfunction Remove(path, end) {\n  if (typeof path !== 'string' || !path.trim()) {\n    return end(new Error('Argument path not defined.'));\n  }\n  var command = [];\n  if (Node.process.platform === 'win32') {\n    if (/\"/.test(path)) {\n      return end(new Error('Argument path cannot contain double-quotes.'));\n    }\n    command.push('rmdir /s /q \"' + path + '\"');\n  } else {\n    command.push('/bin/rm');\n    command.push('-rf');\n    command.push('\"' + EscapeDoubleQuotes(Node.path.normalize(path)) + '\"');\n  }\n  command = command.join(' ');\n  Node.child.exec(command, { encoding: 'utf-8' }, end);\n}\n\nfunction UUID(instance, end) {\n  Node.crypto.randomBytes(256,\n    function(error, random) {\n      if (error) random = Date.now() + '' + Math.random();\n      var hash = Node.crypto.createHash('SHA256');\n      hash.update('sudo-prompt-3');\n      hash.update(instance.options.name);\n      hash.update(instance.command);\n      hash.update(random);\n      var uuid = hash.digest('hex').slice(-32);\n      if (!uuid || typeof uuid !== 'string' || uuid.length !== 32) {\n        // This is critical to ensure we don't remove the wrong temp directory.\n        return end(new Error('Expected a valid UUID.'));\n      }\n      end(undefined, uuid);\n    }\n  );\n}\n\nfunction ValidName(string) {\n  // We use 70 characters as a limit to side-step any issues with Unicode\n  // normalization form causing a 255 character string to exceed the fs limit.\n  if (!/^[a-z0-9 ]+$/i.test(string)) return false;\n  if (string.trim().length === 0) return false;\n  if (string.length > 70) return false;\n  return true;\n}\n\nfunction Windows(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  UUID(instance,\n    function(error, uuid) {\n      if (error) return callback(error);\n      instance.uuid = uuid;\n      instance.path = Node.path.join(temp, instance.uuid);\n      if (/\"/.test(instance.path)) {\n        // We expect double quotes to be reserved on Windows.\n        // Even so, we test for this and abort if they are present.\n        return callback(\n          new Error('instance.path cannot contain double-quotes.')\n        );\n      }\n      instance.pathElevate = Node.path.join(instance.path, 'elevate.vbs');\n      instance.pathExecute = Node.path.join(instance.path, 'execute.bat');\n      instance.pathCommand = Node.path.join(instance.path, 'command.bat');\n      instance.pathStdout = Node.path.join(instance.path, 'stdout');\n      instance.pathStderr = Node.path.join(instance.path, 'stderr');\n      instance.pathStatus = Node.path.join(instance.path, 'status');\n      Node.fs.mkdir(instance.path,\n        function(error) {\n          if (error) return callback(error);\n          function end(error, stdout, stderr) {\n            Remove(instance.path,\n              function(errorRemove) {\n                if (error) return callback(error);\n                if (errorRemove) return callback(errorRemove);\n                callback(undefined, stdout, stderr);\n              }\n            );\n          }\n          WindowsWriteExecuteScript(instance,\n            function(error) {\n              if (error) return end(error);\n              WindowsWriteCommandScript(instance,\n                function(error) {\n                  if (error) return end(error);\n                  WindowsElevate(instance,\n                    function(error, stdout, stderr) {\n                      if (error) return end(error, stdout, stderr);\n                      WindowsWaitForStatus(instance,\n                        function(error) {\n                          if (error) return end(error);\n                          WindowsResult(instance, end);\n                        }\n                      );\n                    }\n                  );\n                }\n              );\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction WindowsElevate(instance, end) {\n  // We used to use this for executing elevate.vbs:\n  // var command = 'cscript.exe //NoLogo \"' + instance.pathElevate + '\"';\n  var command = [];\n  command.push('powershell.exe');\n  command.push('Start-Process');\n  command.push('-FilePath');\n  // Escape characters for cmd using double quotes:\n  // Escape characters for PowerShell using single quotes:\n  // Escape single quotes for PowerShell using backtick:\n  // See: https://ss64.com/ps/syntax-esc.html\n  command.push('\"\\'' + instance.pathExecute.replace(/'/g, \"`'\") + '\\'\"');\n  command.push('-WindowStyle hidden');\n  command.push('-Verb runAs');\n  command = command.join(' ');\n  var child = Node.child.exec(command, { encoding: 'utf-8' },\n    function(error, stdout, stderr) {\n      // We used to return PERMISSION_DENIED only for error messages containing\n      // the string 'canceled by the user'. However, Windows internationalizes\n      // error messages (issue 96) so now we must assume all errors here are\n      // permission errors. This seems reasonable, given that we already run the\n      // user's command in a subshell.\n      if (error) return end(new Error(PERMISSION_DENIED), stdout, stderr);\n      end();\n    }\n  );\n  child.stdin.end(); // Otherwise PowerShell waits indefinitely on Windows 7.\n}\n\nfunction WindowsResult(instance, end) {\n  Node.fs.readFile(instance.pathStatus, 'utf-8',\n    function(error, code) {\n      if (error) return end(error);\n      Node.fs.readFile(instance.pathStdout, 'utf-8',\n        function(error, stdout) {\n          if (error) return end(error);\n          Node.fs.readFile(instance.pathStderr, 'utf-8',\n            function(error, stderr) {\n              if (error) return end(error);\n              code = parseInt(code.trim(), 10);\n              if (code === 0) {\n                end(undefined, stdout, stderr);\n              } else {\n                error = new Error(\n                  'Command failed: ' + instance.command + '\\r\\n' + stderr\n                );\n                error.code = code;\n                end(error, stdout, stderr);\n              }\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction WindowsWaitForStatus(instance, end) {\n  // VBScript cannot wait for the elevated process to finish so we have to poll.\n  // VBScript cannot return error code if user does not grant permission.\n  // PowerShell can be used to elevate and wait on Windows 10.\n  // PowerShell can be used to elevate on Windows 7 but it cannot wait.\n  // powershell.exe Start-Process cmd.exe -Verb runAs -Wait\n  Node.fs.stat(instance.pathStatus,\n    function(error, stats) {\n      if ((error && error.code === 'ENOENT') || stats.size < 2) {\n        // Retry if file does not exist or is not finished writing.\n        // We expect a file size of 2. That should cover at least \"0\\r\".\n        // We use a 1 second timeout to keep a light footprint for long-lived\n        // sudo-prompt processes.\n        setTimeout(\n          function() {\n            // If administrator has no password and user clicks Yes, then\n            // PowerShell returns no error and execute (and command) never runs.\n            // We check that command output has been redirected to stdout file:\n            Node.fs.stat(instance.pathStdout,\n              function(error) {\n                if (error) return end(new Error(PERMISSION_DENIED));\n                WindowsWaitForStatus(instance, end);\n              }\n            );\n          },\n          1000\n        );\n      } else if (error) {\n        end(error);\n      } else {\n        end();\n      }\n    }\n  );\n}\n\nfunction WindowsWriteCommandScript(instance, end) {\n  var cwd = Node.process.cwd();\n  if (/\"/.test(cwd)) {\n    // We expect double quotes to be reserved on Windows.\n    // Even so, we test for this and abort if they are present.\n    return end(new Error('process.cwd() cannot contain double-quotes.'));\n  }\n  var script = [];\n  script.push('@echo off');\n  // Set code page to UTF-8:\n  script.push('chcp 65001>nul');\n  // Preserve current working directory:\n  // We pass /d as an option in case the cwd is on another drive (issue 70).\n  script.push('cd /d \"' + cwd + '\"');\n  // Export environment variables:\n  for (var key in instance.options.env) {\n    // \"The characters <, >, |, &, ^ are special command shell characters, and\n    // they must be preceded by the escape character (^) or enclosed in\n    // quotation marks. If you use quotation marks to enclose a string that\n    // contains one of the special characters, the quotation marks are set as\n    // part of the environment variable value.\"\n    // In other words, Windows assigns everything that follows the equals sign\n    // to the value of the variable, whereas Unix systems ignore double quotes.\n    var value = instance.options.env[key];\n    script.push('set ' + key + '=' + value.replace(/([<>\\\\|&^])/g, '^$1'));\n  }\n  script.push(instance.command);\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathCommand, script, 'utf-8', end);\n}\n\nfunction WindowsWriteElevateScript(instance, end) {\n  // We do not use VBScript to elevate since it does not return an error if\n  // the user does not grant permission. This is here for reference.\n  // var script = [];\n  // script.push('Set objShell = CreateObject(\"Shell.Application\")');\n  // script.push(\n  // 'objShell.ShellExecute \"' + instance.pathExecute + '\", \"\", \"\", \"runas\", 0'\n  // );\n  // script = script.join('\\r\\n');\n  // Node.fs.writeFile(instance.pathElevate, script, 'utf-8', end);\n}\n\nfunction WindowsWriteExecuteScript(instance, end) {\n  var script = [];\n  script.push('@echo off');\n  script.push(\n    'call \"' + instance.pathCommand + '\"' +\n    ' > \"' + instance.pathStdout + '\" 2> \"' + instance.pathStderr + '\"'\n  );\n  script.push('(echo %ERRORLEVEL%) > \"' + instance.pathStatus + '\"');\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathExecute, script, 'utf-8', end);\n}\n\nmodule.exports.exec = Exec;\n\n// We used to expect that applet.app would be included with this module.\n// This could not be copied when sudo-prompt was packaged within an asar file.\n// We now store applet.app as a zip file in base64 within index.js instead.\n// To recreate: \"zip -r ../applet.zip Contents\" (with applet.app as CWD).\n// The zip file must not include applet.app as the root directory so that we\n// can extract it directly to the target app directory.\nvar APPLET = '';\n\nvar PERMISSION_DENIED = 'User did not grant permission.';\nvar NO_POLKIT_AGENT = 'No polkit authentication agent found.';\n\n// See issue 66:\nvar MAX_BUFFER = 134217728;\n", "{\n  \"name\": \"dotenv\",\n  \"version\": \"16.0.3\",\n  \"description\": \"Loads environment variables from .env file\",\n  \"main\": \"lib/main.js\",\n  \"types\": \"lib/main.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"require\": \"./lib/main.js\",\n      \"types\": \"./lib/main.d.ts\",\n      \"default\": \"./lib/main.js\"\n    },\n    \"./config\": \"./config.js\",\n    \"./config.js\": \"./config.js\",\n    \"./lib/env-options\": \"./lib/env-options.js\",\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"scripts\": {\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\n    \"lint\": \"standard\",\n    \"lint-readme\": \"standard-markdown\",\n    \"pretest\": \"npm run lint && npm run dts-check\",\n    \"test\": \"tap tests/*.js --100 -Rspec\",\n    \"prerelease\": \"npm test\",\n    \"release\": \"standard-version\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\n  },\n  \"keywords\": [\n    \"dotenv\",\n    \"env\",\n    \".env\",\n    \"environment\",\n    \"variables\",\n    \"config\",\n    \"settings\"\n  ],\n  \"readmeFilename\": \"README.md\",\n  \"license\": \"BSD-2-Clause\",\n  \"devDependencies\": {\n    \"@types/node\": \"^17.0.9\",\n    \"decache\": \"^4.6.1\",\n    \"dtslint\": \"^3.7.0\",\n    \"sinon\": \"^12.0.1\",\n    \"standard\": \"^16.0.4\",\n    \"standard-markdown\": \"^7.1.0\",\n    \"standard-version\": \"^9.3.2\",\n    \"tap\": \"^15.1.6\",\n    \"tar\": \"^6.1.11\",\n    \"typescript\": \"^4.5.4\"\n  },\n  \"engines\": {\n    \"node\": \">=12\"\n  }\n}\n", "const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n", "// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport registryCommanders from './registryCommanders';\nimport { initZopCodeView } from './zopCodeGenerateView';\nimport { initZopSettingView } from './zopSettingsView';\nimport { initServiceDebugView } from './zopServiceDebugView';\nimport { initCompileDebugView } from './zopCompileDebugView';\nimport { initSetting } from './initProject';\n// import { isExists } from './utils/index';\nimport * as path from 'path';\nimport * as dotenv from 'dotenv';\n\n// This method is called when your extension is activated\nexport function activate(context: vscode.ExtensionContext) {\n\tconsole.log('zop-plugin is now active!');\n\t// merge .env file's env variables\n    dotenv.config({ path:  path.resolve(__dirname, '../.env')});\n\t// registry all common commanders\n\tregistryCommanders(context);\n\n\t// initial code generator tools panel treeviews\n\tinitZopCodeView(context);\n\t// initial compile and debug panel treeviews\n\tinitCompileDebugView(context);\n\t// initial services tool panel treeviews\n\tinitServiceDebugView(context);\n\t// initial settings panel treeviews\n\tinitZopSettingView(context);\n\t\n\t// initial somethings~\n\tinitSetting(context);\n\t// console.log('\u63D2\u4EF6\u5185\u6253\u5F00\u7684\u6587\u4EF6\u76EE\u5F55', vscode.workspace.workspaceFolders);\n\t// console.log('\u5F53\u524D\u63D2\u4EF6\u5DE5\u4F5C\u76EE\u5F55', context.extensionUri);\n\t// console.log('process.env', process.env);\n\t// console.log(\n\t// \t'\u914D\u7F6E\u6587\u4EF6settings.json\u662F\u5426\u5B58\u5728',\n\t// \tisExists(path.join(process.env.HOME as string, \"Library\", \"Application Support\", \"Code\", \"User\", \"settings.json\"))\n\t// );\n\t// console.log('\u641E\u4E0D\u61C2',vscode.Uri.joinPath(context.extensionUri, '.env'))\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {\n\tconsole.log('zop-plugin is deactive!');\n\n}\n", "import * as vscode from 'vscode';\nimport { zopCompileDebugProviderInstance } from './zopCompileDebugView';\nimport { infoMsg } from './utils/index';\n\nexport default function(context: vscode.ExtensionContext) {\n    // \u5237\u65B0 \u516C\u7528\u65B9\u6CD5\n    context.subscriptions.push(vscode.commands.registerCommand('view.refresh', (node) => {\n        console.log(node);\n        switch (node.contextValue) {\n            case 'Build_setting':\n                zopCompileDebugProviderInstance?.refresh();\n                break;\n            default:\n                zopCompileDebugProviderInstance?.refresh();\n                break;\n        }\n        infoMsg(`\u5237\u65B0\u6210\u529F!`);\n    }));\n}", "import * as vscode from 'vscode';\nimport * as path from 'path';\nimport { infoMsg, warningMsg } from './utils/index';\nimport { openWebview } from './webview';\nimport { ZopViewNode } from './zopCodeGenerateView';\nimport { getPlatformsFromSh } from './initProject';\nimport { getState } from './utils/common';\nimport { BUILD_PAGE_INITDATA, PAGE_DATAS_KEY } from './constants/config';\n\nexport let zopCompileDebugProviderInstance: ZopCompileDebugTreeDataProvider | null = null;\n\nexport class ZopCompileDebugTreeDataProvider implements vscode.TreeDataProvider<ZopViewNode> {\n    private _onDidChangeTreeData: vscode.EventEmitter<ZopViewNode | undefined | null | void> = new vscode.EventEmitter<ZopViewNode | undefined | null | void>();\n    readonly onDidChangeTreeData: vscode.Event<ZopViewNode | undefined | null  | void> = this._onDidChangeTreeData.event;\n    \n    data: ZopViewNode[];\n    initialData: ZopViewNode[];\n    contextValue: string;\n\n    constructor(private context: vscode.ExtensionContext) {\n        const treeDataJson = this.context.globalState.get<string>('zopCompileDebugDataCache');\n        this.context = context;\n        this.contextValue = 'zopCompileDebug';\n        this.initialData = [\n            {\n                id: `${new Date().getTime()+11}`, label: 'Build Settings', contextValue: 'Build_setting',\n                iconPath: {\n                    light: path.join(__dirname, '..', 'images/light/light_build.svg'), \n                    dark: path.join(__dirname, '..', 'images/dark/dark_build.svg'),\n                },\n                children: [],\n                collapsibleState: vscode.TreeItemCollapsibleState.Collapsed \n            },\n            {\n                id: `${new Date().getTime()+22}`, label: 'Docker_Debugging', contextValue: 'Docker_Debuggingsss',\n                iconPath: {\n                    light: path.join(__dirname, '..', 'images/light/light_docker.svg'), \n                    dark: path.join(__dirname, '..', 'images/dark/dark_docker.svg'),\n                },\n                children: [],\n                collapsibleState: vscode.TreeItemCollapsibleState.Collapsed \n            },\n            {\n                id: `${new Date().getTime()+33}`, label: 'Gdb_docker_debugging', contextValue: 'Gdb_docker_debugging',\n                iconPath: {\n                    light: path.join(__dirname, '..', 'images/light/light_gdb.svg'), \n                    dark: path.join(__dirname, '..', 'images/dark/dark_gdb.svg'),\n                },\n                children: [],\n                collapsibleState: vscode.TreeItemCollapsibleState.Collapsed\n            },\n            {\n                id: `${new Date().getTime()+44}`, label: 'test-\u6E05\u9664\u7F13\u5B58', contextValue: 'clearCacheTreeData', iconPath: {\n                    light: path.join(__dirname, '..', 'images/service.svg'), \n                    dark: path.join(__dirname, '..', 'images/service.svg'),\n                },\n                children: [], collapsibleState: vscode.TreeItemCollapsibleState.None,\n                command: {\n                    title: '\u6D4B\u8BD5',\n                    command: 'zopPlugin.delCache',\n                    arguments: []\n                }\n             },\n        ];\n        if (treeDataJson) {\n            const _cacheData = JSON.parse(treeDataJson);\n            this.data = _cacheData;\n        } else {\n            this.data = this.initialData;\n        }\n    }\n\n    cacheTreeData() {\n        this.context.globalState.update('zopCompileDebugDataCache', JSON.stringify(this.data));\n    }\n    \n    clearCacheTreeData() {\n        this.data = this.initialData;\n        this.cacheTreeData();\n        this.refresh();\n    }\n    \n\n    getTreeItem(element: ZopViewNode): vscode.TreeItem | Thenable<vscode.TreeItem> {\n        return element;\n    }\n\n    getChildren(element?: ZopViewNode | undefined): vscode.ProviderResult<ZopViewNode[]> {\n        if (element) {\n            return element.children;\n        } else {\n            return this.data;\n        }\n    }\n    removeSubNode(node: ZopViewNode) {\n        const _parentNode = this.data.find(item => item.id === node.parentId);\n        const _rmIndex = _parentNode?.children?.findIndex(i => i.id === node.id) as number;\n        _parentNode?.children?.splice(_rmIndex, 1);\n        this.cacheTreeData();\n        this.refresh();\n        vscode.window.showInformationMessage(`\u5220\u9664\u6210\u529F!`);\n    }\n    renameSubNode(node: ZopViewNode, value: string) {\n        const _parentNode = this.data.find(item => item.id === node.parentId);\n        if (_parentNode?.children?.some(i => i.label === value)) {\n            warningMsg(`\u4FEE\u6539\u6210\u529F!`);\n            return;\n        } else {\n            node.label = value;\n            this.cacheTreeData();\n            this.refresh();\n            infoMsg(`\u4FEE\u6539\u6210\u529F!`);\n        }\n    }\n    addSubNode(node: ZopViewNode, value: string) {\n        const _hasSameNode = node.children?.some(i => i.label === value);\n        if (_hasSameNode) {\n            warningMsg(`\u5B58\u5728\u540C\u540D\u8282\u70B9!`);\n            return;\n        }\n        const _contextValue = `${node.contextValue}_child`;\n        const _id = `${new Date().getTime()}`;\n        \n        const newNode: ZopViewNode = {\n            label: value,\n            parentId: node.id,\n            id: _id,\n            contextValue: _contextValue,\n            collapsibleState: vscode.TreeItemCollapsibleState.None,\n            tooltip: value,\n            command: {\n                title: value,\n                command: `${node.contextValue}_click`,\n                arguments: [{parentId: node.id, id: _id, contextValue: _contextValue, label: value}]\n            }\n        };\n        node.children?.push(newNode);\n        this.cacheTreeData();\n        this.refresh();\n            infoMsg(`\u65B0\u589E\u8282\u70B9: ${value} \u6210\u529F!`);\n        console.log(node);\n    }\n\n    refresh(): void {\n        this._onDidChangeTreeData.fire();\n    }\n}\n\nexport function initCompileDebugView(context: vscode.ExtensionContext) {\n    // get instance\n    zopCompileDebugProviderInstance = new ZopCompileDebugTreeDataProvider(context);\n\n    // registry the tree view\n    context.subscriptions.push(vscode.window.registerTreeDataProvider('zopCompileDebugView', zopCompileDebugProviderInstance));\n    \n    // registry addNewNode command\n    context.subscriptions.push(vscode.commands.registerCommand('zopPlugin.addNewNode', (node: ZopViewNode) => {\n        vscode.window.showInputBox({ prompt: '\u8BF7\u8F93\u5165\u540D\u79F0' }).then(value => {\n            if (value) {\n                zopCompileDebugProviderInstance!.addSubNode(node, value);\n            }\n        });\n    }));\n\n    // registry renameNode command\n    context.subscriptions.push(vscode.commands.registerCommand('zopPlugin.renameNode', (node: ZopViewNode) => {\n        vscode.window.showInputBox({ prompt: '\u8BF7\u8F93\u5165\u65B0\u540D\u79F0' }).then(value => {\n            console.log(node, value);\n            if (value) {\n                zopCompileDebugProviderInstance!.renameSubNode(node, value);\n            }\n        });\n    }));\n    \n    // registry removeNode command\n    context.subscriptions.push(vscode.commands.registerCommand('zopPlugin.removeNode', (node: ZopViewNode) => {\n        zopCompileDebugProviderInstance!.removeSubNode(node);\n    }));\n    \n    // registry removeNode command\n    context.subscriptions.push(vscode.commands.registerCommand('zopPlugin.delCache', () => {\n        zopCompileDebugProviderInstance!.clearCacheTreeData();\n        vscode.window.showInformationMessage(`\u6E05\u7406\u6210\u529F!`);\n        console.log('\u6389\u5230\u4E86');\n    }));\n\n    context.subscriptions.push(vscode.commands.registerCommand('Build_setting_click', async (node) => {\n        console.log('\u70B9\u51FB\u4E86Build_setting_click',node);\n        if(await getPlatformsFromSh(context)) {\n            const _buildPageInitData = getState(context, BUILD_PAGE_INITDATA)\n            const _pageData = getState(context, PAGE_DATAS_KEY)\n            console.log('\u83B7\u53D6\u521D\u59CB\u5316\u6570\u636E', _buildPageInitData)\n            const webviewPanel = openWebview(\n                context,\n                node.id,\n                `${node.label}\u7684\u914D\u7F6E`,\n                'http://localhost:5173/build.html/#/build-config',\n                'build.html'\n            );\n            console.log('webview\u5BF9\u8C61\u54C8\u54C8', webviewPanel)\n            webviewPanel[node.id].webview.postMessage({\n                id: 'initdata',\n                data: _buildPageInitData,\n                pageId: node.id\n            })\n            const nodePageData = _pageData[node.id]\n            if (nodePageData) {\n                webviewPanel[node.id].webview.postMessage({\n                    id: 'pageData',\n                    data: nodePageData,\n                    pageId: node.id\n                })  \n            }\n        }\n        \n    }));\n    \n}\n", "import * as fs from 'fs';\nimport * as vscode from 'vscode';\nimport * as path from 'path';\nimport { SDK_PATH_NAME } from '../constants/config';\n\n\n// \u83B7\u53D6\u5F53\u524D\u63D2\u4EF6\u4E0B\u7684\u7EDD\u5BF9\u8DEF\u5F84\nexport const getExtensionFileAbsolutePath = (context: vscode.ExtensionContext, relativePath: string) => {\n    return path.join(context.extensionPath, relativePath);\n};\n\n// \u6587\u4EF6\u662F\u5426\u5B58\u5728\nexport const isExists = (path: string) => {\n    return fs.existsSync(path);\n};\n\n// showInformationMessage\nexport const infoMsg = (msg: string) => {\n    vscode.window.showInformationMessage(msg);\n};\n\n// showWarningMessage\nexport const warningMsg = (msg: string) => {\n    vscode.window.showWarningMessage(msg);\n};\n\n// showErrorMessage\nexport const errorMsg = (msg: string) => {\n    vscode.window.showErrorMessage(msg);\n};\n\n\nexport const isDev = () => {\n    return process.env.ZKOS_SDK_PLUGIN_ENV === 'development';\n};\n\nexport const isProd = () => {\n    return process.env.ZKOS_SDK_PLUGIN_ENV === 'production';\n};\n\n// check the skd path has its value\nexport const checkSDKPath = () => {\n    let config = vscode.workspace.getConfiguration().get(SDK_PATH_NAME);\n    return !!config\n}\n\n// check the skd path has sdk_buil.sh file \nexport const checkShExists = () => {\n    let config: string = vscode.workspace.getConfiguration().get(SDK_PATH_NAME) || '';\n    return fs.existsSync(path.join(config, \"sdk_build.sh\"))\n}", "// sdk\u76EE\u5F55\u7684key\u540D\nexport const SDK_PATH_NAME = 'Zoks: Global SDK Path'\n\n// build.html\u9875\u9762\u521D\u59CB\u5316\u7684\u65F6\u5019\u7684\u6570\u636E\u5B58\u50A8key\nexport const BUILD_PAGE_INITDATA = 'buildPageInitData'\n\nexport const PAGE_DATAS_KEY = 'pageDatasKey'", "import * as vscode from \"vscode\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport { getExtensionFileAbsolutePath, isDev } from \"./utils\";\nimport { receiveMessageFromWebview } from \"./handleMessageFromWebview\";\n\nlet webviewMap: {\n  [key: string]: any\n} = {};\n\nconst getHtmlContent = (\n  context: vscode.ExtensionContext, panel: vscode.WebviewPanel,\n  router: string, htmlName: string\n) => {\n  console.log('\u6784\u5EFA\u65F6\u5019\u5224\u65AD\u73AF\u5883\u4FE1\u606F1', process.env.ZKOS_SDK_PLUGIN_ENV);\n  \n  // if (process.env.ZKOS_SDK_PLUGIN_ENV === 'development') {\n  //   return `\n  //     <html\">\n  //       <body style=\"margin:0;padding:0;min-height:100vh;background:red;\">\n  //       <iframe id=\"my-iframe\" src=\"${router}\" width=\"100%\" style=\"width:100vw;border:none;height:100vh;\"></iframe>\n  //       </body>\n  //       <script>\n  //         const vscode = acquireVsCodeApi();\n  //         console.log('---\u6211\u8FDB\u5165vscode\u4E86', vscode)\n  //         window.addEventListener('message', event => {\n  //             const message = event.data; // The JSON data our extension sent\n  //             console.log('\u6211\u63A5\u53D7\u5230\u4E00\u4E2A\u4E8B\u4EF6,\u6765\u81EAiframe', event)\n  //             switch (message.command) {\n  //                 case 'doSomething':\n  //                     vscode.postMessage({\n  //                         command: 'doSomething',\n  //                         text: 'Hello from webview!'\n  //                     });\n  //                     break;\n  //             }\n  //         });\n          \n  //         const iframe = document.getElementById('my-iframe');\n  //         // iframe.contentWindow.$$vscode = vscode\n  //     </script>\n  //     </html>\n  //   `;\n  // } else {\n\n    const htmlPath = path.resolve(__dirname, `./web-build/${htmlName}`)\n    let html = fs.readFileSync(htmlPath, 'utf-8');\n    const webviewUri = (localFilePath: string) => {\n      const resourceUri = vscode.Uri.file(localFilePath);\n      return panel.webview.asWebviewUri(resourceUri);\n    };\n    const resourcePath = path.join(context.extensionPath, `out/web-build/${htmlName}`);\n    const dirPath = path.dirname(resourcePath);\n\n    html = html.replace(/(<link.+?href=\"|<script.+?src=\"|<img.+?src=\")(.+?)\"/g, (m, $1, $2) => {\n      return $1 + webviewUri(path.join(dirPath, $2)) + '\"';\n    });\n    return html;\n  }\n// };\n\nexport const openWebview = (context: vscode.ExtensionContext, id: string, title: string = '\u7F51\u9875\u6807\u9898', url=\"http://127.0.0.1:5173/build.html\", htmlName: string='build.html') => {\n  const _currentWebview = webviewMap[id];\n  if (!_currentWebview) {\n    const panel = vscode.window.createWebviewPanel(\n      id, // Identifies the type of the webview. Used internally\n      title, // Title of the panel displayed to the user\n      vscode.ViewColumn.One, // Editor column to show the new webview panel in.\n      {\n        enableScripts: true,\n        retainContextWhenHidden: true,\n      } // Webview options. More on these later.\n    );\n    panel.webview.html = getHtmlContent(context, panel, url, htmlName);\n    \n    panel.onDidDispose(\n      () => {\n        webviewMap[id] = null;\n      },\n      undefined,\n      context.subscriptions\n    );\n    receiveMessageFromWebview(panel, context)\n    webviewMap[id] = panel;\n\n  } else {\n    const panel = webviewMap[id];\n    panel?.reveal(vscode.ViewColumn.One);\n  }\n  return webviewMap\n};\n", "import * as vscode from 'vscode'\nimport * as path from 'path'\nimport * as sudo from 'sudo-prompt'\nimport { getState, saveState } from './utils/common';\nimport { PAGE_DATAS_KEY } from './constants/config';\nimport { infoMsg } from './utils';\n\n//\u5904\u7406\u63A5\u53D7\u6570\u636E\nexport function receiveMessageFromWebview(pannel: vscode.WebviewPanel, context: vscode.ExtensionContext) {\n  pannel.webview.onDidReceiveMessage(function (e) {\n    const evName = e.id\n\n    if (evName === \"vscode:message save-buildConfig\") {\n      console.log('\u4FDD\u5B58\u56DE\u4F20\u7684\u6570\u636E', e)\n      e.build_data = JSON.parse(e.data);\n      let pageDataMap = getState(context, PAGE_DATAS_KEY) || {}\n      pageDataMap[e.pageId] = e.data\n      saveState(context, PAGE_DATAS_KEY, pageDataMap)\n      infoMsg(\"\u4FDD\u5B58\u914D\u7F6E\u6210\u529F\")\n    }\n\n    if (evName === 'vscode:sudo') {\n      console.log(e)\n      console.log(process.env)\n      var options = {\n        name: 'VSCode',\n        icns: '/Applications/Visual Studio Code.app/Contents/Resources/Code.icns', // (optional)\n      };\n      const _path = path.resolve(process.env.VSCODE_CWD as string, 'src-extension/a.sh')\n      sudo.exec(_path, options,\n        function (error, stdout, stderr) {\n          if (error) {\n            console.log('\u51FA\u9519\u4E86', error)\n            pannel.webview.postMessage({\n              id: \"vscode:sudo:cb\",\n              data: { message: error.message, stderr }\n            });\n          } else {\n            pannel.webview.postMessage({\n              id: \"vscode:sudo:cb\",\n              data: { message: stdout, }\n            });\n          }\n          console.log('stdout: ' + stdout);\n        }\n      );\n    }\n\n    if (evName === \"vscode:dialog\") {\n      vscode.window.showOpenDialog({\n        canSelectFiles: !!e.canSelectFiles,\n        canSelectFolders: !e.canSelectFiles,\n        canSelectMany: !!e.canSelectMany,\n        defaultUri: vscode.Uri.file(e?.path),\n        openLabel: `\u9009\u62E9\u6587\u4EF6${!e.canSelectFiles?'\u5939':''}`,\n      })\n        .then((res) => {\n          if (res) {\n            let path = res[0].path.toString();\n            pannel.webview.postMessage({\n              id: \"changePath\",\n              path: process.platform === 'win32' ? path.slice(1, path.length) : path\n            });\n          }\n        });\n    }\n  });\n}", "\nexport const saveState = (context: any, key: string, value: any) => {\n    return context.globalState.update(key, JSON.stringify(value));\n}\n\nexport const getState = (context: any, key: string) => {\n    const _d = context.globalState.get(key);\n    return _d ? JSON.parse(_d) : {}\n}", "import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { BUILD_PAGE_INITDATA, SDK_PATH_NAME } from './constants/config';\nimport { checkShExists, warningMsg } from './utils';\nimport * as child_process from 'child_process'\nimport { saveState, getState} from './utils/common';\n\nlet context: vscode.ExtensionContext | null = null\nlet buildPageData: any = null;\nexport const initSetting = (context: vscode.ExtensionContext) => {\n    context = context\n    // const _isExists = fs.existsSync(path.join(__dirname, '../.vscode'));\n    // console.log('\u662F\u5426\u5B58\u5728\u76EE\u5F55',_isExists);\n    // const config = vscode.workspace.getConfiguration();\n    // const configPath = config.get(SDK_PATH_NAME);\n    // console.log(`\u914D\u7F6E\u9879 Zoks: ${SDK_PATH_NAME}`, configPath);\n\n};\n\n\nexport const getPlatformsFromSh = async (context: vscode.ExtensionContext) => {\n    buildPageData = getState(context, BUILD_PAGE_INITDATA)\n    if (!context) {\n        context = context\n    }\n    let config: string = vscode.workspace.getConfiguration().get(SDK_PATH_NAME) || '';\n    if (config === \"\") {\n        warningMsg(\"\u8BF7\u5148\u914D\u7F6EGlobal Sdk Path !\");\n        vscode.commands.executeCommand('workbench.action.openSettings', SDK_PATH_NAME);\n        return false;\n    } else if (!fs.existsSync(path.join(config, \"sdk_build.sh\"))) {\n        warningMsg(\"sdk \u8DEF\u5F84\u4E0D\u6B63\u786E!\");\n        vscode.commands.executeCommand('workbench.action.openSettings', SDK_PATH_NAME);\n        return false;\n    } else {\n        if (!buildPageData) {\n            const platform = process.platform;\n            let cmd: string = '';\n            if (platform === \"linux\") {\n                cmd = path.join(config, \"sdk_build.sh\");\n            } else if (platform === \"win32\") {\n                cmd = path.join(config, \"sdk_build.bat\");\n            }\n            cmd += \" list-platform --json\";\n            execShellByChildProcess(cmd, platform, context);\n            while (!buildPageData) {\n                let fun = () => console.log(\"time out\");\n                let sleep2 = (time: number | undefined) =>\n                    new Promise((resolve) => {\n                    setTimeout(resolve, time);\n                    });\n                await sleep2(500).then(fun);\n            }\n            console.log('\u8D70\u5230\u8FD9\u91CC\u5DF2\u7ECF\u8BBE\u7F6E\u4E0AglobalState\u4E86:::\u8FD4\u56DEtrue', buildPageData)\n            return true;\n        } else {\n            console.log('\u5B58\u5728\u7F13\u5B58\u6570\u636E\u76F4\u63A5\u8FD4\u56DEtrue');\n            \n            return true\n        }\n    }\n}\n\nconst execShellByChildProcess = (cmd: string, platform: string, context: vscode.ExtensionContext) => {\n    const replaceMap: { [key: string]: string } = {\n        'Default version': 'Default_version',\n        'prebuilt platform': 'prebuilt_platform',\n        'runtime platform': 'runtime_platform',\n    }\n    if (platform === \"linux\") {\n        child_process.exec(\n            cmd,\n            (_error: any, stdout: any) => {\n                let str = stdout.toString();\n                let newstr = str\n                    .replaceAll(\"Default version\", \"Default_version\")\n                    .replaceAll(\"prebuilt platform\", \"prebuilt_platform\")\n                    .replaceAll(\"runtime platform\", \"runtime_platform\");\n                buildPageData = JSON.parse(newstr);\n                // save cmd data to globalstate\n                saveState(context, BUILD_PAGE_INITDATA, buildPageData);\n            }\n        );\n    } else if (platform === \"win32\") {\n        child_process.exec(\n            cmd,\n            (_error: any, stdout: any, _stderr: any) => {\n                let str = stdout.toString();\n                let newstr = str\n                    .replaceAll(\"Default version\", \"Default_version\")\n                    .replaceAll(\"prebuilt platform\", \"prebuilt_platform\")\n                    .replaceAll(\"runtime platform\", \"runtime_platform\");\n                let i = 0;\n                let len = newstr.length;\n                for (; i < len; i++) {\n                    if (newstr[i] === \"{\") {\n                        break;\n                    }\n                }\n                newstr = newstr.substr(i, len - i);\n                buildPageData = JSON.parse(newstr);\n                // save cmd data to globalstate\n                saveState(context, BUILD_PAGE_INITDATA, buildPageData);\n            }\n        );\n    } else if (platform === 'darwin') {\n        // mac just for test\n        const str = {\n            \"Default version\": \"3.0.1.2.0\",\n            \"Detail\": {\n                \"prebuilt\": [\n                    {\n                        \"version\": \"3.0.1.2.0\",\n                        \"prebuilt platform\": [\n                            \"orin-aarch64-linux-debug\",\n                            \"sa8295_aarch64_qnx-debug\",\n                            \"platform-x64-linux-debug\",\n                            \"tcam-aarch64-linux-debug\",\n                            \"s32g-aarch64-linux-debug\"\n                        ],\n                        \"runtime platform\": \"platform-x64-linux-debug\"\n                    }\n                ]\n            }\n        }\n        const jsonStr = JSON.stringify(str).replace(/Default version|prebuilt platform|runtime platform/g, function (match) {\n            return replaceMap[match]\n        })\n        buildPageData = JSON.parse(jsonStr);\n        // save cmd data to globalstate\n        saveState(context, BUILD_PAGE_INITDATA, buildPageData);\n        console.log('\u8BBE\u7F6EbuildPageData\u4E86:::', buildPageData)\n    }\n}\n", "import * as vscode from 'vscode';\nimport * as path from 'path';\n// const {nanoid} = require('nanoid');\nimport {nanoid} from 'nanoid';\nimport { infoMsg, warningMsg } from './utils';\n// Activating extension 'wuazhu.wuazhu-vscode-plugin-demo' failed: require() of ES Module\nexport interface ZopViewNode extends vscode.TreeItem {\n    label: string;\n    contextValue: string;\n    parentId?: string;\n    children?: ZopViewNode[];\n}\n\nexport let zopCodeProviderInstance: ZopCodeGenerateTreeDataProvider | null = null;\n\nexport class ZopCodeGenerateTreeDataProvider implements vscode.TreeDataProvider<ZopViewNode> {\n    private _onDidChangeTreeData: vscode.EventEmitter<ZopViewNode | undefined | null | void> = new vscode.EventEmitter<ZopViewNode | undefined | null | void>();\n    readonly onDidChangeTreeData: vscode.Event<ZopViewNode | undefined | null  | void> = this._onDidChangeTreeData.event;\n    \n    data: ZopViewNode[];\n\n    constructor(private context: vscode.ExtensionContext) {\n        console.log('\u6211\u662FzopCode')\n        this.context = context;\n        this.data = [\n            {\n                id: `${new Date().getTime()+1}`, label: '\u5DE5\u5177\u94FE', contextValue: 'Tool_Chain',\n                iconPath: {\n                    light: path.join(__dirname, '..', 'images/light/light_toolchain.svg'), \n                    dark: path.join(__dirname, '..', 'images/dark/dark_toolchain.svg'),\n                },\n                children: [], collapsibleState: vscode.TreeItemCollapsibleState.None,\n                command: {\n                    title: '\u5DE5\u5177\u94FE',\n                    command: `toolChain.click`\n                }\n            }\n        ];\n    }\n\n\n\n    getTreeItem(element: ZopViewNode): vscode.TreeItem | Thenable<vscode.TreeItem> {\n        return element;\n    }\n\n    getChildren(element?: ZopViewNode | undefined): vscode.ProviderResult<ZopViewNode[]> {\n        if (element) {\n            return element.children;\n        } else {\n            return this.data;\n        }\n    }\n    \n}\n\nexport function initZopCodeView(context: vscode.ExtensionContext) {\n    // get instance\n    zopCodeProviderInstance = new ZopCodeGenerateTreeDataProvider(context);\n\n    // registry the tree view\n    context.subscriptions.push(vscode.window.registerTreeDataProvider('zopCodeGenerate', zopCodeProviderInstance));\n    \n    // \u70B9\u51FB\u5DE5\u5177\u94FE\n    context.subscriptions.push(vscode.commands.registerCommand(\"toolChain.click\", () => {\n        console.log('\u70B9\u51FB\u5DE5\u5177\u94FE');\n        const mathExt: any = vscode.extensions.getExtension(\"toolchain.Tortie-preview\");\n        const importedApi = mathExt.exports;\n        // const url = \"http://127.0.0.1:15000/service_demo/#/service/service_design\";\n        const url = \"https://www.baidu.com\";\n        importedApi.createWebview(url);\n    }));\n    \n}\n", "import * as vscode from 'vscode';\nimport * as path from 'path';\nimport { ZopViewNode } from './zopCodeGenerateView';\n\nexport let zopSettingViewInstance: ZopSettingViewTreeDataProvider | null = null;\nexport class ZopSettingViewTreeDataProvider implements vscode.TreeDataProvider<ZopViewNode> {\n    data: ZopViewNode[];\n\n    constructor(private context: vscode.ExtensionContext) {\n        const treeDataJson = this.context.globalState.get<string>('zopSettingDataCache');\n        this.context = context;\n        if (treeDataJson) {\n            const _cacheData = JSON.parse(treeDataJson);\n            this.data = _cacheData;\n        } else {\n            this.data = [\n                {\n                    id: `${new Date().getTime()+1}`, label: '\u8BBE\u7F6E', contextValue: 'Settings',\n                    iconPath: {\n                        light: path.join(__dirname, '..', 'images/light_setting.svg'), \n                        dark: path.join(__dirname, '..', 'images/dark_setting.svg'),\n                    },\n                    children: [], collapsibleState: vscode.TreeItemCollapsibleState.None,\n                    command: {\n                        title: '\u8BBE\u7F6E',\n                        command: 'zopPlugin.openSetting',\n                        arguments: []\n                    }\n                }\n            ];\n        }\n        console.log(this.data);\n    }\n\n\n    getTreeItem(element: ZopViewNode): vscode.TreeItem | Thenable<vscode.TreeItem> {\n        return element;\n    }\n\n    getChildren(element?: ZopViewNode | undefined): vscode.ProviderResult<ZopViewNode[]> {\n        if (element) {\n            return element.children;\n        } else {\n            return this.data;\n        }\n    }\n}\n\nexport function initZopSettingView(context: vscode.ExtensionContext) {\n    // get instance\n    zopSettingViewInstance = new ZopSettingViewTreeDataProvider(context);\n\n    // registry the setting tree view\n    context.subscriptions.push(vscode.window.registerTreeDataProvider('zopSetting', zopSettingViewInstance));\n    \n    // registry open user settings command\n    context.subscriptions.push(vscode.commands.registerCommand('zopPlugin.openSetting', (node: ZopViewNode) => {\n        console.log('\u6253\u5F00\u8BBE\u7F6E');\n        vscode.commands.executeCommand('workbench.action.openSettings', 'Zoks: Global SDK Path');\n    }));\n    \n}\n", "import * as vscode from 'vscode';\nimport * as path from 'path';\nimport { ZopViewNode } from './zopCodeGenerateView';\nimport { openWebview } from './webview';\nexport let zopServiceDebugInstance: ZopServiceDebugTreeDataProvider | null = null;\n\nexport class ZopServiceDebugTreeDataProvider implements vscode.TreeDataProvider<ZopViewNode> {\n    private _onDidChangeTreeData: vscode.EventEmitter<ZopViewNode | undefined | null | void> = new vscode.EventEmitter<ZopViewNode | undefined | null | void>();\n    readonly onDidChangeTreeData: vscode.Event<ZopViewNode | undefined | null  | void> = this._onDidChangeTreeData.event;\n    \n    data: ZopViewNode[];\n\n    constructor(private context: vscode.ExtensionContext) {\n        this.context = context;\n        const _serviceCheckId= `${new Date().getTime()+31}`\n        const _serviceContextValue= `${new Date().getTime()+31}`\n        const _serviceLabel = '\u670D\u52A1\u9A8C\u8BC1'\n        this.data = [\n            {\n                id: _serviceCheckId,\n                label: _serviceLabel,\n                contextValue: _serviceContextValue,\n                iconPath: {\n                    light: path.join(__dirname, '..', 'images/light/light_service.svg'), \n                    dark: path.join(__dirname, '..', 'images/dark/dark_service.svg'),\n                },\n                children: [], collapsibleState: vscode.TreeItemCollapsibleState.None,\n                command: {\n                    title: '\u670D\u52A1\u9A8C\u8BC1',\n                    command: `serviceCheck.click`,\n                    arguments: [{\n                        id: _serviceCheckId,\n                        contextValue: _serviceContextValue,\n                        label: _serviceLabel\n                    }]\n                }\n            }\n        ];\n    }\n\n\n\n    getTreeItem(element: ZopViewNode): vscode.TreeItem | Thenable<vscode.TreeItem> {\n        return element;\n    }\n\n    getChildren(element?: ZopViewNode | undefined): vscode.ProviderResult<ZopViewNode[]> {\n        if (element) {\n            return element.children;\n        } else {\n            return this.data;\n        }\n    }\n}\n\nexport function initServiceDebugView(context: vscode.ExtensionContext) {\n    // get instance\n    zopServiceDebugInstance = new ZopServiceDebugTreeDataProvider(context);\n\n    // registry the tree view\n    context.subscriptions.push(vscode.window.registerTreeDataProvider('zopCheckDebugToolView', zopServiceDebugInstance));\n    \n    // \u70B9\u51FB\u670D\u52A1\u9A8C\u8BC1\n    context.subscriptions.push(vscode.commands.registerCommand(\"serviceCheck.click\", (node) => {\n        openWebview(context, node.id, `\u670D\u52A1\u9A8C\u8BC1`, process.env.SERVICE_WEBVIEW, 'service.html');\n    }));\n    \n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,+CAAAA,SAAA;AAAA,QAAI,OAAO;AAAA,MACT,OAAO,QAAQ,eAAe;AAAA,MAC9B,QAAQ,QAAQ,QAAQ;AAAA,MACxB,IAAI,QAAQ,IAAI;AAAA,MAChB,IAAI,QAAQ,IAAI;AAAA,MAChB,MAAM,QAAQ,MAAM;AAAA,MACpB;AAAA,MACA,MAAM,QAAQ,MAAM;AAAA,IACtB;AAEA,aAAS,QAAQ,UAAU,KAAK;AAC9B,UAAI,WAAW,KAAK,QAAQ;AAC5B,UAAI,aAAa;AAAU,eAAO,IAAI,UAAU,GAAG;AACnD,UAAI,aAAa;AAAS,eAAO,MAAM,UAAU,GAAG;AACpD,UAAI,aAAa;AAAS,eAAO,QAAQ,UAAU,GAAG;AACtD,UAAI,IAAI,MAAM,6BAA6B,CAAC;AAAA,IAC9C;AAEA,aAAS,mBAAmB,QAAQ;AAClC,UAAI,OAAO,WAAW;AAAU,cAAM,IAAI,MAAM,oBAAoB;AACpE,aAAO,OAAO,QAAQ,MAAM,KAAK;AAAA,IACnC;AAEA,aAAS,OAAO;AACd,UAAI,UAAU,SAAS,KAAK,UAAU,SAAS,GAAG;AAChD,cAAM,IAAI,MAAM,4BAA4B;AAAA,MAC9C;AACA,UAAI,UAAU,UAAU,CAAC;AACzB,UAAI,UAAU,CAAC;AACf,UAAI,MAAM,WAAW;AAAA,MAAC;AACtB,UAAI,OAAO,YAAY,UAAU;AAC/B,cAAM,IAAI,MAAM,6BAA6B;AAAA,MAC/C;AACA,UAAI,UAAU,WAAW,GAAG;AAC1B,YAAI,KAAK,KAAK,SAAS,UAAU,CAAC,CAAC,GAAG;AACpC,oBAAU,UAAU,CAAC;AAAA,QACvB,WAAW,KAAK,KAAK,WAAW,UAAU,CAAC,CAAC,GAAG;AAC7C,gBAAM,UAAU,CAAC;AAAA,QACnB,OAAO;AACL,gBAAM,IAAI,MAAM,+BAA+B;AAAA,QACjD;AAAA,MACF,WAAW,UAAU,WAAW,GAAG;AACjC,YAAI,KAAK,KAAK,SAAS,UAAU,CAAC,CAAC,GAAG;AACpC,oBAAU,UAAU,CAAC;AAAA,QACvB,OAAO;AACL,gBAAM,IAAI,MAAM,mCAAmC;AAAA,QACrD;AACA,YAAI,KAAK,KAAK,WAAW,UAAU,CAAC,CAAC,GAAG;AACtC,gBAAM,UAAU,CAAC;AAAA,QACnB,OAAO;AACL,gBAAM,IAAI,MAAM,qCAAqC;AAAA,QACvD;AAAA,MACF;AACA,UAAI,SAAS,KAAK,OAAO,GAAG;AAC1B,eAAO,IAAI,IAAI,MAAM,6CAA6C,CAAC;AAAA,MACrE;AACA,UAAI,OAAO,QAAQ,SAAS,aAAa;AACvC,YAAI,QAAQ,KAAK,QAAQ;AACzB,YAAI,UAAU,KAAK,GAAG;AACpB,kBAAQ,OAAO;AAAA,QACjB,OAAO;AACL,iBAAO,IAAI,IAAI,MAAM,+CAA+C,CAAC;AAAA,QACvE;AAAA,MACF,WAAW,CAAC,UAAU,QAAQ,IAAI,GAAG;AACnC,YAAI,QAAQ;AACZ,iBAAS;AACT,iBAAS;AACT,eAAO,IAAI,IAAI,MAAM,KAAK,CAAC;AAAA,MAC7B;AACA,UAAI,OAAO,QAAQ,SAAS,aAAa;AACvC,YAAI,OAAO,QAAQ,SAAS,UAAU;AACpC,iBAAO,IAAI,IAAI,MAAM,4CAA4C,CAAC;AAAA,QACpE,WAAW,QAAQ,KAAK,KAAK,EAAE,WAAW,GAAG;AAC3C,iBAAO,IAAI,IAAI,MAAM,6CAA6C,CAAC;AAAA,QACrE;AAAA,MACF;AACA,UAAI,OAAO,QAAQ,QAAQ,aAAa;AACtC,YAAI,OAAO,QAAQ,QAAQ,UAAU;AACnC,iBAAO,IAAI,IAAI,MAAM,4CAA4C,CAAC;AAAA,QACpE,WAAW,OAAO,KAAK,QAAQ,GAAG,EAAE,WAAW,GAAG;AAChD,iBAAO,IAAI,IAAI,MAAM,4CAA4C,CAAC;AAAA,QACpE,OAAO;AACL,mBAAS,OAAO,QAAQ,KAAK;AAC3B,gBAAI,QAAQ,QAAQ,IAAI,GAAG;AAC3B,gBAAI,OAAO,QAAQ,YAAY,OAAO,UAAU,UAAU;AACxD,qBAAO;AAAA,gBACL,IAAI,MAAM,oDAAoD;AAAA,cAChE;AAAA,YACF;AAOA,gBAAI,CAAC,2BAA2B,KAAK,GAAG,GAAG;AACzC,qBAAO;AAAA,gBACL,IAAI;AAAA,kBACF,2DACA,KAAK,UAAU,GAAG;AAAA,gBACpB;AAAA,cACF;AAAA,YACF;AACA,gBAAI,SAAS,KAAK,KAAK,GAAG;AACxB,qBAAO;AAAA,gBACL,IAAI;AAAA,kBACF,4DACA,KAAK,UAAU,KAAK;AAAA,gBACtB;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,UAAI,WAAW,KAAK,QAAQ;AAC5B,UAAI,aAAa,YAAY,aAAa,WAAW,aAAa,SAAS;AACzE,eAAO,IAAI,IAAI,MAAM,6BAA6B,CAAC;AAAA,MACrD;AACA,UAAI,WAAW;AAAA,QACb;AAAA,QACA;AAAA,QACA,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AACA,cAAQ,UAAU,GAAG;AAAA,IACvB;AAEA,aAAS,MAAM,UAAU,KAAK;AAC5B;AAAA,QAAY;AAAA,QACV,SAAS,OAAO,QAAQ;AACtB,cAAI;AAAO,mBAAO,IAAI,KAAK;AAC3B,cAAI,UAAU,CAAC;AAEf,kBAAQ,KAAK,SAAS,mBAAmB,KAAK,QAAQ,IAAI,CAAC,IAAI,IAAI;AAEnE,mBAAS,OAAO,SAAS,QAAQ,KAAK;AACpC,gBAAI,QAAQ,SAAS,QAAQ,IAAI,GAAG;AACpC,oBAAQ,KAAK,YAAY,MAAM,OAAO,mBAAmB,KAAK,IAAI,IAAI;AAAA,UACxE;AACA,kBAAQ,KAAK,MAAM,mBAAmB,MAAM,IAAI,GAAG;AACnD,cAAI,WAAW,KAAK,MAAM,GAAG;AAC3B,oBAAQ;AAAA,cACN;AAAA,cACA,MAAM,SAAS,QAAQ,OAAO;AAAA,YAEhC;AACA,oBAAQ,KAAK,IAAI;AACjB,oBAAQ,KAAK,IAAI;AAAA,UACnB,WAAW,UAAU,KAAK,MAAM,GAAG;AACjC,oBAAQ,KAAK,0BAA0B;AAAA,UACzC;AACA,cAAI,QAAQ;AACZ,kBAAQ;AAAA,YACN,wBAAwB,mBAAmB,MAAM,KAAK,CAAC,IAAI,OAC3D,mBAAmB,SAAS,OAAO,IACnC;AAAA,UACF;AACA,oBAAU,QAAQ,KAAK,GAAG;AAC1B,eAAK,MAAM;AAAA,YAAK;AAAA,YAAS,EAAE,UAAU,SAAS,WAAW,WAAW;AAAA,YAClE,SAASC,QAAO,QAAQ,QAAQ;AAkB9B,kBAAI,WAAW,UAAU,OAAO,MAAM,GAAG,MAAM,MAAM,MAAM;AAC3D,kBAAI;AAAU,yBAAS,OAAO,MAAM,MAAM,MAAM;AAKhD,kBAAIA,UAAS,CAAC,UAAU;AACtB,oBAAI,gCAAgC,KAAK,MAAM,GAAG;AAChD,kBAAAA,OAAM,UAAU;AAAA,gBAClB,OAAO;AACL,kBAAAA,OAAM,UAAU;AAAA,gBAClB;AAAA,cACF;AACA,kBAAIA,QAAO,QAAQ,MAAM;AAAA,YAC3B;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,YAAY,UAAU,KAAK;AAClC,UAAI,QAAQ;AAGZ,UAAI,QAAQ,CAAC,oBAAoB,iBAAiB;AAClD,eAAS,OAAO;AACd,YAAI,UAAU,MAAM,QAAQ;AAC1B,iBAAO,IAAI,IAAI,MAAM,mCAAmC,CAAC;AAAA,QAC3D;AACA,YAAIC,QAAO,MAAM,OAAO;AACxB,aAAK,GAAG;AAAA,UAAKA;AAAA,UACX,SAAS,OAAO;AACd,gBAAI,OAAO;AACT,kBAAI,MAAM,SAAS;AAAW,uBAAO,KAAK;AAC1C,kBAAI,MAAM,SAAS;AAAU,uBAAO,KAAK;AACzC,kBAAI,KAAK;AAAA,YACX,OAAO;AACL,kBAAI,QAAWA,KAAI;AAAA,YACrB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,WAAK;AAAA,IACP;AAEA,aAAS,IAAI,UAAU,UAAU;AAC/B,UAAI,OAAO,KAAK,GAAG,OAAO;AAC1B,UAAI,CAAC;AAAM,eAAO,SAAS,IAAI,MAAM,0BAA0B,CAAC;AAChE,UAAI,OAAO,KAAK,QAAQ,IAAI;AAC5B,UAAI,CAAC;AAAM,eAAO,SAAS,IAAI,MAAM,0BAA4B,CAAC;AAClE;AAAA,QAAK;AAAA,QACH,SAAS,OAAO,MAAM;AACpB,cAAI;AAAO,mBAAO,SAAS,KAAK;AAChC,mBAAS,OAAO;AAChB,mBAAS,OAAO,KAAK,KAAK;AAAA,YACxB;AAAA,YACA,SAAS;AAAA,YACT,SAAS,QAAQ,OAAO;AAAA,UAC1B;AACA,mBAAS,IAAID,QAAO,QAAQ,QAAQ;AAClC;AAAA,cAAO,KAAK,KAAK,QAAQ,SAAS,IAAI;AAAA,cACpC,SAAS,aAAa;AACpB,oBAAIA;AAAO,yBAAO,SAASA,MAAK;AAChC,oBAAI;AAAa,yBAAO,SAAS,WAAW;AAC5C,yBAAS,QAAW,QAAQ,MAAM;AAAA,cACpC;AAAA,YACF;AAAA,UACF;AACA;AAAA,YAAU;AAAA,YACR,SAASA,QAAO,QAAQ,QAAQ;AAC9B,kBAAIA;AAAO,uBAAO,IAAIA,QAAO,QAAQ,MAAM;AAC3C;AAAA,gBAAQ;AAAA,gBACN,SAASA,QAAO;AACd,sBAAIA;AAAO,2BAAO,IAAIA,MAAK;AAC3B;AAAA,oBAAgB;AAAA,oBACd,SAASA,QAAOE,SAAQC,SAAQ;AAC9B,0BAAIH;AAAO,+BAAO,IAAIA,QAAOE,SAAQC,OAAM;AAC3C;AAAA,wBAAW;AAAA,wBACT,SAASH,QAAO;AACd,8BAAIA;AAAO,mCAAO,IAAIA,MAAK;AAC3B;AAAA,4BAAQ;AAAA,4BACN,SAASA,QAAOE,SAAQC,SAAQ;AAC9B,kCAAIH;AAAO,uCAAO,IAAIA,QAAOE,SAAQC,OAAM;AAC3C,wCAAU,UAAU,GAAG;AAAA,4BACzB;AAAA,0BACF;AAAA,wBACF;AAAA,sBACF;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,UAAU,UAAU,KAAK;AAChC,UAAI,SAAS,KAAK,KAAK,QAAQ,SAAS,IAAI;AAC5C,WAAK,GAAG;AAAA,QAAM;AAAA,QACZ,SAAS,OAAO;AACd,cAAI;AAAO,mBAAO,IAAI,KAAK;AAC3B,cAAI,MAAM,KAAK,KAAK,KAAK,QAAQ,wBAAwB;AACzD,eAAK,GAAG;AAAA,YAAU;AAAA,YAAK;AAAA,YAAQ;AAAA,YAC7B,SAASH,QAAO;AACd,kBAAIA;AAAO,uBAAO,IAAIA,MAAK;AAC3B,kBAAI,UAAU,CAAC;AACf,sBAAQ,KAAK,gBAAgB;AAC7B,sBAAQ,KAAK,IAAI;AACjB,sBAAQ,KAAK,MAAM,mBAAmB,GAAG,IAAI,GAAG;AAChD,sBAAQ,KAAK,SAAS,mBAAmB,SAAS,IAAI,IAAI,GAAG;AAC7D,wBAAU,QAAQ,KAAK,GAAG;AAC1B,mBAAK,MAAM,KAAK,SAAS,EAAE,UAAU,QAAQ,GAAG,GAAG;AAAA,YACrD;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,WAAW,UAAU,KAAK;AACjC,UAAIC,QAAO,KAAK,KAAK;AAAA,QACnB,SAAS;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,UAAI,SAAS,CAAC;AAId,aAAO,KAAK,SAAS,mBAAmB,KAAK,QAAQ,IAAI,CAAC,IAAI,GAAG;AAEjE,eAAS,OAAO,SAAS,QAAQ,KAAK;AACpC,YAAI,QAAQ,SAAS,QAAQ,IAAI,GAAG;AACpC,eAAO,KAAK,YAAY,MAAM,OAAO,mBAAmB,KAAK,IAAI,GAAG;AAAA,MACtE;AACA,aAAO,KAAK,SAAS,OAAO;AAC5B,eAAS,OAAO,KAAK,IAAI;AACzB,WAAK,GAAG,UAAUA,OAAM,QAAQ,SAAS,GAAG;AAAA,IAC9C;AAEA,aAAS,QAAQ,UAAU,KAAK;AAC9B,UAAI,CAAC,SAAS,QAAQ;AAAM,eAAO,IAAI;AACvC,WAAK,GAAG;AAAA,QAAS,SAAS,QAAQ;AAAA,QAChC,SAAS,OAAO,QAAQ;AACtB,cAAI;AAAO,mBAAO,IAAI,KAAK;AAC3B,cAAI,OAAO,KAAK,KAAK;AAAA,YACnB,SAAS;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,UACF;AACA,eAAK,GAAG,UAAU,MAAM,QAAQ,GAAG;AAAA,QACrC;AAAA,MACF;AAAA,IACF;AAEA,aAAS,QAAQ,UAAU,KAAK;AAE9B,UAAI,SAAS,KAAK,KAAK,KAAK,SAAS,MAAM,YAAY,SAAS,QAAQ;AAExE,UAAI,UAAU;AAAA,QACZ,KAAK,KAAK,KAAK,QAAQ,MAAM;AAAA,QAC7B,UAAU;AAAA,MACZ;AAGA,WAAK,MAAM,KAAK,OAAO,KAAK,KAAK,SAAS,MAAM,GAAG,SAAS,GAAG;AAAA,IACjE;AAEA,aAAS,gBAAgB,UAAU,KAAK;AAMtC,UAAI,QAAQ,KAAK,KAAK,KAAK,SAAS,MAAM,YAAY,YAAY;AAClE,UAAIA,QAAO,mBAAmB,KAAK;AACnC,UAAI,MAAM,mBAAmB,cAAc;AAC3C,UAAI,QAAQ,SAAS,QAAQ,OAAO;AACpC,UAAI,IAAI,KAAK,KAAK,GAAG;AACnB,eAAO,IAAI,IAAI,MAAM,yCAAyC,CAAC;AAAA,MACjE;AACA,UAAI,UAAU,CAAC;AACf,cAAQ,KAAK,mBAAmB;AAChC,cAAQ,KAAK,OAAO;AACpB,cAAQ,KAAK,MAAMA,QAAO,GAAG;AAC7B,cAAQ,KAAK,MAAM,MAAM,GAAG;AAC5B,cAAQ,KAAK,MAAM,QAAQ,GAAG;AAC9B,gBAAU,QAAQ,KAAK,GAAG;AAC1B,WAAK,MAAM,KAAK,SAAS,EAAE,UAAU,QAAQ,GAAG,GAAG;AAAA,IACrD;AAEA,aAAS,UAAU,UAAU,KAAK;AAChC,UAAI,MAAM,KAAK,KAAK,KAAK,SAAS,MAAM,YAAY,OAAO;AAC3D,WAAK,GAAG;AAAA,QAAS,KAAK,KAAK,KAAK,KAAK,MAAM;AAAA,QAAG;AAAA,QAC5C,SAAS,OAAO,MAAM;AACpB,cAAI,OAAO;AACT,gBAAI,MAAM,SAAS;AAAU,qBAAO,IAAI,IAAI,MAAM,iBAAiB,CAAC;AACpE,gBAAI,KAAK;AAAA,UACX,OAAO;AACL,iBAAK,GAAG;AAAA,cAAS,KAAK,KAAK,KAAK,KAAK,QAAQ;AAAA,cAAG;AAAA,cAC9C,SAASD,QAAO,QAAQ;AACtB,oBAAIA;AAAO,yBAAO,IAAIA,MAAK;AAC3B,qBAAK,GAAG;AAAA,kBAAS,KAAK,KAAK,KAAK,KAAK,QAAQ;AAAA,kBAAG;AAAA,kBAC9C,SAASA,QAAO,QAAQ;AACtB,wBAAIA;AAAO,6BAAO,IAAIA,MAAK;AAC3B,2BAAO,SAAS,KAAK,KAAK,GAAG,EAAE;AAC/B,wBAAI,SAAS,GAAG;AACd,0BAAI,QAAW,QAAQ,MAAM;AAAA,oBAC/B,OAAO;AACL,sBAAAA,SAAQ,IAAI;AAAA,wBACV,qBAAqB,SAAS,UAAU,OAAO;AAAA,sBACjD;AACA,sBAAAA,OAAM,OAAO;AACb,0BAAIA,QAAO,QAAQ,MAAM;AAAA,oBAC3B;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,OAAOC,OAAM,KAAK;AACzB,UAAI,OAAOA,UAAS,YAAY,CAACA,MAAK,KAAK,GAAG;AAC5C,eAAO,IAAI,IAAI,MAAM,4BAA4B,CAAC;AAAA,MACpD;AACA,UAAI,UAAU,CAAC;AACf,UAAI,KAAK,QAAQ,aAAa,SAAS;AACrC,YAAI,IAAI,KAAKA,KAAI,GAAG;AAClB,iBAAO,IAAI,IAAI,MAAM,6CAA6C,CAAC;AAAA,QACrE;AACA,gBAAQ,KAAK,kBAAkBA,QAAO,GAAG;AAAA,MAC3C,OAAO;AACL,gBAAQ,KAAK,SAAS;AACtB,gBAAQ,KAAK,KAAK;AAClB,gBAAQ,KAAK,MAAM,mBAAmB,KAAK,KAAK,UAAUA,KAAI,CAAC,IAAI,GAAG;AAAA,MACxE;AACA,gBAAU,QAAQ,KAAK,GAAG;AAC1B,WAAK,MAAM,KAAK,SAAS,EAAE,UAAU,QAAQ,GAAG,GAAG;AAAA,IACrD;AAEA,aAAS,KAAK,UAAU,KAAK;AAC3B,WAAK,OAAO;AAAA,QAAY;AAAA,QACtB,SAAS,OAAO,QAAQ;AACtB,cAAI;AAAO,qBAAS,KAAK,IAAI,IAAI,KAAK,KAAK,OAAO;AAClD,cAAI,OAAO,KAAK,OAAO,WAAW,QAAQ;AAC1C,eAAK,OAAO,eAAe;AAC3B,eAAK,OAAO,SAAS,QAAQ,IAAI;AACjC,eAAK,OAAO,SAAS,OAAO;AAC5B,eAAK,OAAO,MAAM;AAClB,cAAI,OAAO,KAAK,OAAO,KAAK,EAAE,MAAM,GAAG;AACvC,cAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,KAAK,WAAW,IAAI;AAE3D,mBAAO,IAAI,IAAI,MAAM,wBAAwB,CAAC;AAAA,UAChD;AACA,cAAI,QAAW,IAAI;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAEA,aAAS,UAAU,QAAQ;AAGzB,UAAI,CAAC,gBAAgB,KAAK,MAAM;AAAG,eAAO;AAC1C,UAAI,OAAO,KAAK,EAAE,WAAW;AAAG,eAAO;AACvC,UAAI,OAAO,SAAS;AAAI,eAAO;AAC/B,aAAO;AAAA,IACT;AAEA,aAAS,QAAQ,UAAU,UAAU;AACnC,UAAI,OAAO,KAAK,GAAG,OAAO;AAC1B,UAAI,CAAC;AAAM,eAAO,SAAS,IAAI,MAAM,0BAA0B,CAAC;AAChE;AAAA,QAAK;AAAA,QACH,SAAS,OAAO,MAAM;AACpB,cAAI;AAAO,mBAAO,SAAS,KAAK;AAChC,mBAAS,OAAO;AAChB,mBAAS,OAAO,KAAK,KAAK,KAAK,MAAM,SAAS,IAAI;AAClD,cAAI,IAAI,KAAK,SAAS,IAAI,GAAG;AAG3B,mBAAO;AAAA,cACL,IAAI,MAAM,6CAA6C;AAAA,YACzD;AAAA,UACF;AACA,mBAAS,cAAc,KAAK,KAAK,KAAK,SAAS,MAAM,aAAa;AAClE,mBAAS,cAAc,KAAK,KAAK,KAAK,SAAS,MAAM,aAAa;AAClE,mBAAS,cAAc,KAAK,KAAK,KAAK,SAAS,MAAM,aAAa;AAClE,mBAAS,aAAa,KAAK,KAAK,KAAK,SAAS,MAAM,QAAQ;AAC5D,mBAAS,aAAa,KAAK,KAAK,KAAK,SAAS,MAAM,QAAQ;AAC5D,mBAAS,aAAa,KAAK,KAAK,KAAK,SAAS,MAAM,QAAQ;AAC5D,eAAK,GAAG;AAAA,YAAM,SAAS;AAAA,YACrB,SAASD,QAAO;AACd,kBAAIA;AAAO,uBAAO,SAASA,MAAK;AAChC,uBAAS,IAAIA,QAAO,QAAQ,QAAQ;AAClC;AAAA,kBAAO,SAAS;AAAA,kBACd,SAAS,aAAa;AACpB,wBAAIA;AAAO,6BAAO,SAASA,MAAK;AAChC,wBAAI;AAAa,6BAAO,SAAS,WAAW;AAC5C,6BAAS,QAAW,QAAQ,MAAM;AAAA,kBACpC;AAAA,gBACF;AAAA,cACF;AACA;AAAA,gBAA0B;AAAA,gBACxB,SAASA,QAAO;AACd,sBAAIA;AAAO,2BAAO,IAAIA,MAAK;AAC3B;AAAA,oBAA0B;AAAA,oBACxB,SAASA,QAAO;AACd,0BAAIA;AAAO,+BAAO,IAAIA,MAAK;AAC3B;AAAA,wBAAe;AAAA,wBACb,SAASA,QAAO,QAAQ,QAAQ;AAC9B,8BAAIA;AAAO,mCAAO,IAAIA,QAAO,QAAQ,MAAM;AAC3C;AAAA,4BAAqB;AAAA,4BACnB,SAASA,QAAO;AACd,kCAAIA;AAAO,uCAAO,IAAIA,MAAK;AAC3B,4CAAc,UAAU,GAAG;AAAA,4BAC7B;AAAA,0BACF;AAAA,wBACF;AAAA,sBACF;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,eAAe,UAAU,KAAK;AAGrC,UAAI,UAAU,CAAC;AACf,cAAQ,KAAK,gBAAgB;AAC7B,cAAQ,KAAK,eAAe;AAC5B,cAAQ,KAAK,WAAW;AAKxB,cAAQ,KAAK,OAAQ,SAAS,YAAY,QAAQ,MAAM,IAAI,IAAI,IAAK;AACrE,cAAQ,KAAK,qBAAqB;AAClC,cAAQ,KAAK,aAAa;AAC1B,gBAAU,QAAQ,KAAK,GAAG;AAC1B,UAAI,QAAQ,KAAK,MAAM;AAAA,QAAK;AAAA,QAAS,EAAE,UAAU,QAAQ;AAAA,QACvD,SAAS,OAAO,QAAQ,QAAQ;AAM9B,cAAI;AAAO,mBAAO,IAAI,IAAI,MAAM,iBAAiB,GAAG,QAAQ,MAAM;AAClE,cAAI;AAAA,QACN;AAAA,MACF;AACA,YAAM,MAAM,IAAI;AAAA,IAClB;AAEA,aAAS,cAAc,UAAU,KAAK;AACpC,WAAK,GAAG;AAAA,QAAS,SAAS;AAAA,QAAY;AAAA,QACpC,SAAS,OAAO,MAAM;AACpB,cAAI;AAAO,mBAAO,IAAI,KAAK;AAC3B,eAAK,GAAG;AAAA,YAAS,SAAS;AAAA,YAAY;AAAA,YACpC,SAASA,QAAO,QAAQ;AACtB,kBAAIA;AAAO,uBAAO,IAAIA,MAAK;AAC3B,mBAAK,GAAG;AAAA,gBAAS,SAAS;AAAA,gBAAY;AAAA,gBACpC,SAASA,QAAO,QAAQ;AACtB,sBAAIA;AAAO,2BAAO,IAAIA,MAAK;AAC3B,yBAAO,SAAS,KAAK,KAAK,GAAG,EAAE;AAC/B,sBAAI,SAAS,GAAG;AACd,wBAAI,QAAW,QAAQ,MAAM;AAAA,kBAC/B,OAAO;AACL,oBAAAA,SAAQ,IAAI;AAAA,sBACV,qBAAqB,SAAS,UAAU,SAAS;AAAA,oBACnD;AACA,oBAAAA,OAAM,OAAO;AACb,wBAAIA,QAAO,QAAQ,MAAM;AAAA,kBAC3B;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,qBAAqB,UAAU,KAAK;AAM3C,WAAK,GAAG;AAAA,QAAK,SAAS;AAAA,QACpB,SAAS,OAAO,OAAO;AACrB,cAAK,SAAS,MAAM,SAAS,YAAa,MAAM,OAAO,GAAG;AAKxD;AAAA,cACE,WAAW;AAIT,qBAAK,GAAG;AAAA,kBAAK,SAAS;AAAA,kBACpB,SAASA,QAAO;AACd,wBAAIA;AAAO,6BAAO,IAAI,IAAI,MAAM,iBAAiB,CAAC;AAClD,yCAAqB,UAAU,GAAG;AAAA,kBACpC;AAAA,gBACF;AAAA,cACF;AAAA,cACA;AAAA,YACF;AAAA,UACF,WAAW,OAAO;AAChB,gBAAI,KAAK;AAAA,UACX,OAAO;AACL,gBAAI;AAAA,UACN;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,0BAA0B,UAAU,KAAK;AAChD,UAAI,MAAM,KAAK,QAAQ,IAAI;AAC3B,UAAI,IAAI,KAAK,GAAG,GAAG;AAGjB,eAAO,IAAI,IAAI,MAAM,6CAA6C,CAAC;AAAA,MACrE;AACA,UAAI,SAAS,CAAC;AACd,aAAO,KAAK,WAAW;AAEvB,aAAO,KAAK,gBAAgB;AAG5B,aAAO,KAAK,YAAY,MAAM,GAAG;AAEjC,eAAS,OAAO,SAAS,QAAQ,KAAK;AAQpC,YAAI,QAAQ,SAAS,QAAQ,IAAI,GAAG;AACpC,eAAO,KAAK,SAAS,MAAM,MAAM,MAAM,QAAQ,gBAAgB,KAAK,CAAC;AAAA,MACvE;AACA,aAAO,KAAK,SAAS,OAAO;AAC5B,eAAS,OAAO,KAAK,MAAM;AAC3B,WAAK,GAAG,UAAU,SAAS,aAAa,QAAQ,SAAS,GAAG;AAAA,IAC9D;AAcA,aAAS,0BAA0B,UAAU,KAAK;AAChD,UAAI,SAAS,CAAC;AACd,aAAO,KAAK,WAAW;AACvB,aAAO;AAAA,QACL,WAAW,SAAS,cAAc,UACzB,SAAS,aAAa,WAAW,SAAS,aAAa;AAAA,MAClE;AACA,aAAO,KAAK,4BAA4B,SAAS,aAAa,GAAG;AACjE,eAAS,OAAO,KAAK,MAAM;AAC3B,WAAK,GAAG,UAAU,SAAS,aAAa,QAAQ,SAAS,GAAG;AAAA,IAC9D;AAEA,IAAAD,QAAO,QAAQ,OAAO;AAQtB,QAAI,SAAS;AAEb,QAAI,oBAAoB;AACxB,QAAI,kBAAkB;AAGtB,QAAI,aAAa;AAAA;AAAA;;;ACjqBjB;AAAA,8CAAAK,SAAA;AAAA,IAAAA,QAAA;AAAA,MACE,MAAQ;AAAA,MACR,SAAW;AAAA,MACX,aAAe;AAAA,MACf,MAAQ;AAAA,MACR,OAAS;AAAA,MACT,SAAW;AAAA,QACT,KAAK;AAAA,UACH,SAAW;AAAA,UACX,OAAS;AAAA,UACT,SAAW;AAAA,QACb;AAAA,QACA,YAAY;AAAA,QACZ,eAAe;AAAA,QACf,qBAAqB;AAAA,QACrB,wBAAwB;AAAA,QACxB,qBAAqB;AAAA,QACrB,wBAAwB;AAAA,QACxB,kBAAkB;AAAA,MACpB;AAAA,MACA,SAAW;AAAA,QACT,aAAa;AAAA,QACb,MAAQ;AAAA,QACR,eAAe;AAAA,QACf,SAAW;AAAA,QACX,MAAQ;AAAA,QACR,YAAc;AAAA,QACd,SAAW;AAAA,MACb;AAAA,MACA,YAAc;AAAA,QACZ,MAAQ;AAAA,QACR,KAAO;AAAA,MACT;AAAA,MACA,UAAY;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,gBAAkB;AAAA,MAClB,SAAW;AAAA,MACX,iBAAmB;AAAA,QACjB,eAAe;AAAA,QACf,SAAW;AAAA,QACX,SAAW;AAAA,QACX,OAAS;AAAA,QACT,UAAY;AAAA,QACZ,qBAAqB;AAAA,QACrB,oBAAoB;AAAA,QACpB,KAAO;AAAA,QACP,KAAO;AAAA,QACP,YAAc;AAAA,MAChB;AAAA,MACA,SAAW;AAAA,QACT,MAAQ;AAAA,MACV;AAAA,IACF;AAAA;AAAA;;;AC3DA;AAAA,6CAAAC,SAAA;AAAA,QAAMC,MAAK,QAAQ,IAAI;AACvB,QAAMC,QAAO,QAAQ,MAAM;AAC3B,QAAM,KAAK,QAAQ,IAAI;AACvB,QAAM,cAAc;AAEpB,QAAM,UAAU,YAAY;AAE5B,QAAM,OAAO;AAGb,aAAS,MAAO,KAAK;AACnB,YAAM,MAAM,CAAC;AAGb,UAAI,QAAQ,IAAI,SAAS;AAGzB,cAAQ,MAAM,QAAQ,WAAW,IAAI;AAErC,UAAI;AACJ,cAAQ,QAAQ,KAAK,KAAK,KAAK,MAAM,MAAM;AACzC,cAAM,MAAM,MAAM,CAAC;AAGnB,YAAI,QAAS,MAAM,CAAC,KAAK;AAGzB,gBAAQ,MAAM,KAAK;AAGnB,cAAM,aAAa,MAAM,CAAC;AAG1B,gBAAQ,MAAM,QAAQ,0BAA0B,IAAI;AAGpD,YAAI,eAAe,KAAK;AACtB,kBAAQ,MAAM,QAAQ,QAAQ,IAAI;AAClC,kBAAQ,MAAM,QAAQ,QAAQ,IAAI;AAAA,QACpC;AAGA,YAAI,GAAG,IAAI;AAAA,MACb;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,KAAM,SAAS;AACtB,cAAQ,IAAI,WAAW,mBAAmB,SAAS;AAAA,IACrD;AAEA,aAAS,aAAc,SAAS;AAC9B,aAAO,QAAQ,CAAC,MAAM,MAAMA,MAAK,KAAK,GAAG,QAAQ,GAAG,QAAQ,MAAM,CAAC,CAAC,IAAI;AAAA,IAC1E;AAGA,aAASC,QAAQ,SAAS;AACxB,UAAI,aAAaD,MAAK,QAAQ,QAAQ,IAAI,GAAG,MAAM;AACnD,UAAI,WAAW;AACf,YAAM,QAAQ,QAAQ,WAAW,QAAQ,KAAK;AAC9C,YAAM,WAAW,QAAQ,WAAW,QAAQ,QAAQ;AAEpD,UAAI,SAAS;AACX,YAAI,QAAQ,QAAQ,MAAM;AACxB,uBAAa,aAAa,QAAQ,IAAI;AAAA,QACxC;AACA,YAAI,QAAQ,YAAY,MAAM;AAC5B,qBAAW,QAAQ;AAAA,QACrB;AAAA,MACF;AAEA,UAAI;AAEF,cAAM,SAAS,aAAa,MAAMD,IAAG,aAAa,YAAY,EAAE,SAAS,CAAC,CAAC;AAE3E,eAAO,KAAK,MAAM,EAAE,QAAQ,SAAU,KAAK;AACzC,cAAI,CAAC,OAAO,UAAU,eAAe,KAAK,QAAQ,KAAK,GAAG,GAAG;AAC3D,oBAAQ,IAAI,GAAG,IAAI,OAAO,GAAG;AAAA,UAC/B,OAAO;AACL,gBAAI,aAAa,MAAM;AACrB,sBAAQ,IAAI,GAAG,IAAI,OAAO,GAAG;AAAA,YAC/B;AAEA,gBAAI,OAAO;AACT,kBAAI,aAAa,MAAM;AACrB,qBAAK,IAAI,gEAAgE;AAAA,cAC3E,OAAO;AACL,qBAAK,IAAI,oEAAoE;AAAA,cAC/E;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAED,eAAO,EAAE,OAAO;AAAA,MAClB,SAAS,GAAP;AACA,YAAI,OAAO;AACT,eAAK,kBAAkB,cAAc,EAAE,SAAS;AAAA,QAClD;AAEA,eAAO,EAAE,OAAO,EAAE;AAAA,MACpB;AAAA,IACF;AAEA,QAAM,eAAe;AAAA,MACnB,QAAAE;AAAA,MACA;AAAA,IACF;AAEA,IAAAH,QAAO,QAAQ,SAAS,aAAa;AACrC,IAAAA,QAAO,QAAQ,QAAQ,aAAa;AACpC,IAAAA,QAAO,UAAU;AAAA;AAAA;;;AC/GjB;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAI,UAAwB;;;ACAxB,IAAAC,UAAwB;AACxB,IAAAC,QAAsB;;;ACAtB,aAAwB;;;ACAjB,IAAM,gBAAgB;AAGtB,IAAM,sBAAsB;AAE5B,IAAM,iBAAiB;;;ADWvB,IAAM,UAAU,CAAC,QAAgB;AACpC,EAAO,cAAO,uBAAuB,GAAG;AAC5C;AAGO,IAAM,aAAa,CAAC,QAAgB;AACvC,EAAO,cAAO,mBAAmB,GAAG;AACxC;;;AExBA,IAAAC,UAAwB;AACxB,IAAAC,QAAsB;AACtB,SAAoB;;;ACFpB,IAAAC,UAAwB;AACxB,WAAsB;AACtB,WAAsB;;;ACDf,IAAM,YAAY,CAAC,SAAc,KAAa,UAAe;AAChE,SAAO,QAAQ,YAAY,OAAO,KAAK,KAAK,UAAU,KAAK,CAAC;AAChE;AAEO,IAAM,WAAW,CAAC,SAAc,QAAgB;AACnD,QAAM,KAAK,QAAQ,YAAY,IAAI,GAAG;AACtC,SAAO,KAAK,KAAK,MAAM,EAAE,IAAI,CAAC;AAClC;;;ADAO,SAAS,0BAA0B,QAA6B,SAAkC;AACvG,SAAO,QAAQ,oBAAoB,SAAU,GAAG;AAC9C,UAAM,SAAS,EAAE;AAEjB,QAAI,WAAW,mCAAmC;AAChD,cAAQ,IAAI,8CAAW,CAAC;AACxB,QAAE,aAAa,KAAK,MAAM,EAAE,IAAI;AAChC,UAAI,cAAc,SAAS,SAAS,cAAc,KAAK,CAAC;AACxD,kBAAY,EAAE,MAAM,IAAI,EAAE;AAC1B,gBAAU,SAAS,gBAAgB,WAAW;AAC9C,cAAQ,sCAAQ;AAAA,IAClB;AAEA,QAAI,WAAW,eAAe;AAC5B,cAAQ,IAAI,CAAC;AACb,cAAQ,IAAI,QAAQ,GAAG;AACvB,UAAI,UAAU;AAAA,QACZ,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MACR;AACA,YAAM,QAAa,aAAQ,QAAQ,IAAI,YAAsB,oBAAoB;AACjF,MAAK;AAAA,QAAK;AAAA,QAAO;AAAA,QACf,SAAU,OAAO,QAAQ,QAAQ;AAC/B,cAAI,OAAO;AACT,oBAAQ,IAAI,sBAAO,KAAK;AACxB,mBAAO,QAAQ,YAAY;AAAA,cACzB,IAAI;AAAA,cACJ,MAAM,EAAE,SAAS,MAAM,SAAS,OAAO;AAAA,YACzC,CAAC;AAAA,UACH,OAAO;AACL,mBAAO,QAAQ,YAAY;AAAA,cACzB,IAAI;AAAA,cACJ,MAAM,EAAE,SAAS,OAAQ;AAAA,YAC3B,CAAC;AAAA,UACH;AACA,kBAAQ,IAAI,aAAa,MAAM;AAAA,QACjC;AAAA,MACF;AAAA,IACF;AAEA,QAAI,WAAW,iBAAiB;AAC9B,MAAO,eAAO,eAAe;AAAA,QAC3B,gBAAgB,CAAC,CAAC,EAAE;AAAA,QACpB,kBAAkB,CAAC,EAAE;AAAA,QACrB,eAAe,CAAC,CAAC,EAAE;AAAA,QACnB,YAAmB,YAAI,KAAK,GAAG,IAAI;AAAA,QACnC,WAAW,2BAAO,CAAC,EAAE,iBAAe,WAAI;AAAA,MAC1C,CAAC,EACE,KAAK,CAAC,QAAQ;AACb,YAAI,KAAK;AACP,cAAIC,QAAO,IAAI,CAAC,EAAE,KAAK,SAAS;AAChC,iBAAO,QAAQ,YAAY;AAAA,YACzB,IAAI;AAAA,YACJ,MAAM,QAAQ,aAAa,UAAUA,MAAK,MAAM,GAAGA,MAAK,MAAM,IAAIA;AAAA,UACpE,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACL;AAAA,EACF,CAAC;AACH;;;AD7DA,IAAI,aAEA,CAAC;AAEL,IAAM,iBAAiB,CACrB,SAAkC,OAClC,QAAgB,aACb;AACH,UAAQ,IAAI,iEAAe,QAAQ,IAAI,mBAAmB;AA+BxD,QAAM,WAAgB,cAAQ,WAAW,eAAe,UAAU;AAClE,MAAI,OAAU,gBAAa,UAAU,OAAO;AAC5C,QAAM,aAAa,CAAC,kBAA0B;AAC5C,UAAM,cAAqB,YAAI,KAAK,aAAa;AACjD,WAAO,MAAM,QAAQ,aAAa,WAAW;AAAA,EAC/C;AACA,QAAM,eAAoB,WAAK,QAAQ,eAAe,iBAAiB,UAAU;AACjF,QAAM,UAAe,cAAQ,YAAY;AAEzC,SAAO,KAAK,QAAQ,wDAAwD,CAAC,GAAG,IAAI,OAAO;AACzF,WAAO,KAAK,WAAgB,WAAK,SAAS,EAAE,CAAC,IAAI;AAAA,EACnD,CAAC;AACD,SAAO;AACT;AAGK,IAAM,cAAc,CAAC,SAAkC,IAAY,QAAgB,4BAAQ,MAAI,oCAAoC,WAAiB,iBAAiB;AAC1K,QAAM,kBAAkB,WAAW,EAAE;AACrC,MAAI,CAAC,iBAAiB;AACpB,UAAM,QAAe,eAAO;AAAA,MAC1B;AAAA;AAAA,MACA;AAAA;AAAA,MACO,mBAAW;AAAA;AAAA,MAClB;AAAA,QACE,eAAe;AAAA,QACf,yBAAyB;AAAA,MAC3B;AAAA;AAAA,IACF;AACA,UAAM,QAAQ,OAAO,eAAe,SAAS,OAAO,KAAK,QAAQ;AAEjE,UAAM;AAAA,MACJ,MAAM;AACJ,mBAAW,EAAE,IAAI;AAAA,MACnB;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,IACV;AACA,8BAA0B,OAAO,OAAO;AACxC,eAAW,EAAE,IAAI;AAAA,EAEnB,OAAO;AACL,UAAM,QAAQ,WAAW,EAAE;AAC3B,WAAO,OAAc,mBAAW,GAAG;AAAA,EACrC;AACA,SAAO;AACT;;;AG1FA,IAAAC,UAAwB;AACxB,IAAAC,MAAoB;AACpB,IAAAC,QAAsB;AAGtB,oBAA+B;AAI/B,IAAI,gBAAqB;AAClB,IAAM,cAAc,CAAC,YAAqC;AAC7D,YAAU;AAOd;AAGO,IAAM,qBAAqB,OAAO,YAAqC;AAC1E,kBAAgB,SAAS,SAAS,mBAAmB;AACrD,MAAI,CAAC,SAAS;AACV,cAAU;AAAA,EACd;AACA,MAAIC,UAAwB,kBAAU,iBAAiB,EAAE,IAAI,aAAa,KAAK;AAC/E,MAAIA,YAAW,IAAI;AACf,eAAW,2CAAuB;AAClC,IAAO,iBAAS,eAAe,iCAAiC,aAAa;AAC7E,WAAO;AAAA,EACX,WAAW,CAAI,eAAgB,WAAKA,SAAQ,cAAc,CAAC,GAAG;AAC1D,eAAW,qCAAY;AACvB,IAAO,iBAAS,eAAe,iCAAiC,aAAa;AAC7E,WAAO;AAAA,EACX,OAAO;AACH,QAAI,CAAC,eAAe;AAChB,YAAM,WAAW,QAAQ;AACzB,UAAI,MAAc;AAClB,UAAI,aAAa,SAAS;AACtB,cAAW,WAAKA,SAAQ,cAAc;AAAA,MAC1C,WAAW,aAAa,SAAS;AAC7B,cAAW,WAAKA,SAAQ,eAAe;AAAA,MAC3C;AACA,aAAO;AACP,8BAAwB,KAAK,UAAU,OAAO;AAC9C,aAAO,CAAC,eAAe;AACnB,YAAI,MAAM,MAAM,QAAQ,IAAI,UAAU;AACtC,YAAI,SAAS,CAAC,SACV,IAAI,QAAQ,CAACC,aAAY;AACzB,qBAAWA,UAAS,IAAI;AAAA,QACxB,CAAC;AACL,cAAM,OAAO,GAAG,EAAE,KAAK,GAAG;AAAA,MAC9B;AACA,cAAQ,IAAI,8FAAkC,aAAa;AAC3D,aAAO;AAAA,IACX,OAAO;AACH,cAAQ,IAAI,kEAAgB;AAE5B,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AAEA,IAAM,0BAA0B,CAAC,KAAa,UAAkB,YAAqC;AACjG,QAAM,aAAwC;AAAA,IAC1C,mBAAmB;AAAA,IACnB,qBAAqB;AAAA,IACrB,oBAAoB;AAAA,EACxB;AACA,MAAI,aAAa,SAAS;AACtB,IAAc;AAAA,MACV;AAAA,MACA,CAAC,QAAa,WAAgB;AAC1B,YAAI,MAAM,OAAO,SAAS;AAC1B,YAAI,SAAS,IACR,WAAW,mBAAmB,iBAAiB,EAC/C,WAAW,qBAAqB,mBAAmB,EACnD,WAAW,oBAAoB,kBAAkB;AACtD,wBAAgB,KAAK,MAAM,MAAM;AAEjC,kBAAU,SAAS,qBAAqB,aAAa;AAAA,MACzD;AAAA,IACJ;AAAA,EACJ,WAAW,aAAa,SAAS;AAC7B,IAAc;AAAA,MACV;AAAA,MACA,CAAC,QAAa,QAAa,YAAiB;AACxC,YAAI,MAAM,OAAO,SAAS;AAC1B,YAAI,SAAS,IACR,WAAW,mBAAmB,iBAAiB,EAC/C,WAAW,qBAAqB,mBAAmB,EACnD,WAAW,oBAAoB,kBAAkB;AACtD,YAAI,IAAI;AACR,YAAI,MAAM,OAAO;AACjB,eAAO,IAAI,KAAK,KAAK;AACjB,cAAI,OAAO,CAAC,MAAM,KAAK;AACnB;AAAA,UACJ;AAAA,QACJ;AACA,iBAAS,OAAO,OAAO,GAAG,MAAM,CAAC;AACjC,wBAAgB,KAAK,MAAM,MAAM;AAEjC,kBAAU,SAAS,qBAAqB,aAAa;AAAA,MACzD;AAAA,IACJ;AAAA,EACJ,WAAW,aAAa,UAAU;AAE9B,UAAM,MAAM;AAAA,MACR,mBAAmB;AAAA,MACnB,UAAU;AAAA,QACN,YAAY;AAAA,UACR;AAAA,YACI,WAAW;AAAA,YACX,qBAAqB;AAAA,cACjB;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACJ;AAAA,YACA,oBAAoB;AAAA,UACxB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,UAAM,UAAU,KAAK,UAAU,GAAG,EAAE,QAAQ,uDAAuD,SAAU,OAAO;AAChH,aAAO,WAAW,KAAK;AAAA,IAC3B,CAAC;AACD,oBAAgB,KAAK,MAAM,OAAO;AAElC,cAAU,SAAS,qBAAqB,aAAa;AACrD,YAAQ,IAAI,sCAAuB,aAAa;AAAA,EACpD;AACJ;;;AN7HO,IAAI,kCAA0E;AAE9E,IAAM,kCAAN,MAAsF;AAAA,EAQzF,YAAoB,SAAkC;AAAlC;AAPpB,wBAAQ,wBAAmF,IAAW,qBAAoD;AAC1J,wBAAS,uBAA4E,KAAK,qBAAqB;AAE/G;AACA;AACA;AAGI,UAAM,eAAe,KAAK,QAAQ,YAAY,IAAY,0BAA0B;AACpF,SAAK,UAAU;AACf,SAAK,eAAe;AACpB,SAAK,cAAc;AAAA,MACf;AAAA,QACI,IAAI,IAAG,oBAAI,KAAK,GAAE,QAAQ,IAAE;AAAA,QAAM,OAAO;AAAA,QAAkB,cAAc;AAAA,QACzE,UAAU;AAAA,UACN,OAAY,WAAK,WAAW,MAAM,8BAA8B;AAAA,UAChE,MAAW,WAAK,WAAW,MAAM,4BAA4B;AAAA,QACjE;AAAA,QACA,UAAU,CAAC;AAAA,QACX,kBAAyB,iCAAyB;AAAA,MACtD;AAAA,MACA;AAAA,QACI,IAAI,IAAG,oBAAI,KAAK,GAAE,QAAQ,IAAE;AAAA,QAAM,OAAO;AAAA,QAAoB,cAAc;AAAA,QAC3E,UAAU;AAAA,UACN,OAAY,WAAK,WAAW,MAAM,+BAA+B;AAAA,UACjE,MAAW,WAAK,WAAW,MAAM,6BAA6B;AAAA,QAClE;AAAA,QACA,UAAU,CAAC;AAAA,QACX,kBAAyB,iCAAyB;AAAA,MACtD;AAAA,MACA;AAAA,QACI,IAAI,IAAG,oBAAI,KAAK,GAAE,QAAQ,IAAE;AAAA,QAAM,OAAO;AAAA,QAAwB,cAAc;AAAA,QAC/E,UAAU;AAAA,UACN,OAAY,WAAK,WAAW,MAAM,4BAA4B;AAAA,UAC9D,MAAW,WAAK,WAAW,MAAM,0BAA0B;AAAA,QAC/D;AAAA,QACA,UAAU,CAAC;AAAA,QACX,kBAAyB,iCAAyB;AAAA,MACtD;AAAA,MACA;AAAA,QACI,IAAI,IAAG,oBAAI,KAAK,GAAE,QAAQ,IAAE;AAAA,QAAM,OAAO;AAAA,QAAa,cAAc;AAAA,QAAsB,UAAU;AAAA,UAChG,OAAY,WAAK,WAAW,MAAM,oBAAoB;AAAA,UACtD,MAAW,WAAK,WAAW,MAAM,oBAAoB;AAAA,QACzD;AAAA,QACA,UAAU,CAAC;AAAA,QAAG,kBAAyB,iCAAyB;AAAA,QAChE,SAAS;AAAA,UACL,OAAO;AAAA,UACP,SAAS;AAAA,UACT,WAAW,CAAC;AAAA,QAChB;AAAA,MACH;AAAA,IACL;AACA,QAAI,cAAc;AACd,YAAM,aAAa,KAAK,MAAM,YAAY;AAC1C,WAAK,OAAO;AAAA,IAChB,OAAO;AACH,WAAK,OAAO,KAAK;AAAA,IACrB;AAAA,EACJ;AAAA,EAEA,gBAAgB;AACZ,SAAK,QAAQ,YAAY,OAAO,4BAA4B,KAAK,UAAU,KAAK,IAAI,CAAC;AAAA,EACzF;AAAA,EAEA,qBAAqB;AACjB,SAAK,OAAO,KAAK;AACjB,SAAK,cAAc;AACnB,SAAK,QAAQ;AAAA,EACjB;AAAA,EAGA,YAAY,SAAmE;AAC3E,WAAO;AAAA,EACX;AAAA,EAEA,YAAY,SAAyE;AACjF,QAAI,SAAS;AACT,aAAO,QAAQ;AAAA,IACnB,OAAO;AACH,aAAO,KAAK;AAAA,IAChB;AAAA,EACJ;AAAA,EACA,cAAc,MAAmB;AAC7B,UAAM,cAAc,KAAK,KAAK,KAAK,UAAQ,KAAK,OAAO,KAAK,QAAQ;AACpE,UAAM,WAAW,aAAa,UAAU,UAAU,OAAK,EAAE,OAAO,KAAK,EAAE;AACvE,iBAAa,UAAU,OAAO,UAAU,CAAC;AACzC,SAAK,cAAc;AACnB,SAAK,QAAQ;AACb,IAAO,eAAO,uBAAuB,2BAAO;AAAA,EAChD;AAAA,EACA,cAAc,MAAmB,OAAe;AAC5C,UAAM,cAAc,KAAK,KAAK,KAAK,UAAQ,KAAK,OAAO,KAAK,QAAQ;AACpE,QAAI,aAAa,UAAU,KAAK,OAAK,EAAE,UAAU,KAAK,GAAG;AACrD,iBAAW,2BAAO;AAClB;AAAA,IACJ,OAAO;AACH,WAAK,QAAQ;AACb,WAAK,cAAc;AACnB,WAAK,QAAQ;AACb,cAAQ,2BAAO;AAAA,IACnB;AAAA,EACJ;AAAA,EACA,WAAW,MAAmB,OAAe;AACzC,UAAM,eAAe,KAAK,UAAU,KAAK,OAAK,EAAE,UAAU,KAAK;AAC/D,QAAI,cAAc;AACd,iBAAW,uCAAS;AACpB;AAAA,IACJ;AACA,UAAM,gBAAgB,GAAG,KAAK;AAC9B,UAAM,MAAM,IAAG,oBAAI,KAAK,GAAE,QAAQ;AAElC,UAAM,UAAuB;AAAA,MACzB,OAAO;AAAA,MACP,UAAU,KAAK;AAAA,MACf,IAAI;AAAA,MACJ,cAAc;AAAA,MACd,kBAAyB,iCAAyB;AAAA,MAClD,SAAS;AAAA,MACT,SAAS;AAAA,QACL,OAAO;AAAA,QACP,SAAS,GAAG,KAAK;AAAA,QACjB,WAAW,CAAC,EAAC,UAAU,KAAK,IAAI,IAAI,KAAK,cAAc,eAAe,OAAO,MAAK,CAAC;AAAA,MACvF;AAAA,IACJ;AACA,SAAK,UAAU,KAAK,OAAO;AAC3B,SAAK,cAAc;AACnB,SAAK,QAAQ;AACT,YAAQ,6BAAS,qBAAW;AAChC,YAAQ,IAAI,IAAI;AAAA,EACpB;AAAA,EAEA,UAAgB;AACZ,SAAK,qBAAqB,KAAK;AAAA,EACnC;AACJ;AAEO,SAAS,qBAAqB,SAAkC;AAEnE,oCAAkC,IAAI,gCAAgC,OAAO;AAG7E,UAAQ,cAAc,KAAY,eAAO,yBAAyB,uBAAuB,+BAA+B,CAAC;AAGzH,UAAQ,cAAc,KAAY,iBAAS,gBAAgB,wBAAwB,CAAC,SAAsB;AACtG,IAAO,eAAO,aAAa,EAAE,QAAQ,iCAAQ,CAAC,EAAE,KAAK,WAAS;AAC1D,UAAI,OAAO;AACP,wCAAiC,WAAW,MAAM,KAAK;AAAA,MAC3D;AAAA,IACJ,CAAC;AAAA,EACL,CAAC,CAAC;AAGF,UAAQ,cAAc,KAAY,iBAAS,gBAAgB,wBAAwB,CAAC,SAAsB;AACtG,IAAO,eAAO,aAAa,EAAE,QAAQ,uCAAS,CAAC,EAAE,KAAK,WAAS;AAC3D,cAAQ,IAAI,MAAM,KAAK;AACvB,UAAI,OAAO;AACP,wCAAiC,cAAc,MAAM,KAAK;AAAA,MAC9D;AAAA,IACJ,CAAC;AAAA,EACL,CAAC,CAAC;AAGF,UAAQ,cAAc,KAAY,iBAAS,gBAAgB,wBAAwB,CAAC,SAAsB;AACtG,oCAAiC,cAAc,IAAI;AAAA,EACvD,CAAC,CAAC;AAGF,UAAQ,cAAc,KAAY,iBAAS,gBAAgB,sBAAsB,MAAM;AACnF,oCAAiC,mBAAmB;AACpD,IAAO,eAAO,uBAAuB,2BAAO;AAC5C,YAAQ,IAAI,oBAAK;AAAA,EACrB,CAAC,CAAC;AAEF,UAAQ,cAAc,KAAY,iBAAS,gBAAgB,uBAAuB,OAAO,SAAS;AAC9F,YAAQ,IAAI,yCAAyB,IAAI;AACzC,QAAG,MAAM,mBAAmB,OAAO,GAAG;AAClC,YAAM,qBAAqB,SAAS,SAAS,mBAAmB;AAChE,YAAM,YAAY,SAAS,SAAS,cAAc;AAClD,cAAQ,IAAI,8CAAW,kBAAkB;AACzC,YAAM,eAAe;AAAA,QACjB;AAAA,QACA,KAAK;AAAA,QACL,GAAG,KAAK;AAAA,QACR;AAAA,QACA;AAAA,MACJ;AACA,cAAQ,IAAI,mCAAe,YAAY;AACvC,mBAAa,KAAK,EAAE,EAAE,QAAQ,YAAY;AAAA,QACtC,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,QAAQ,KAAK;AAAA,MACjB,CAAC;AACD,YAAM,eAAe,UAAU,KAAK,EAAE;AACtC,UAAI,cAAc;AACd,qBAAa,KAAK,EAAE,EAAE,QAAQ,YAAY;AAAA,UACtC,IAAI;AAAA,UACJ,MAAM;AAAA,UACN,QAAQ,KAAK;AAAA,QACjB,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,EAEJ,CAAC,CAAC;AAEN;;;ADrNe,SAAR,2BAAiB,SAAkC;AAEtD,UAAQ,cAAc,KAAY,iBAAS,gBAAgB,gBAAgB,CAAC,SAAS;AACjF,YAAQ,IAAI,IAAI;AAChB,YAAQ,KAAK,cAAc;AAAA,MACvB,KAAK;AACD,yCAAiC,QAAQ;AACzC;AAAA,MACJ;AACI,yCAAiC,QAAQ;AACzC;AAAA,IACR;AACA,YAAQ,2BAAO;AAAA,EACnB,CAAC,CAAC;AACN;;;AQlBA,IAAAC,UAAwB;AACxB,IAAAC,QAAsB;AAYf,IAAI,0BAAkE;AAEtE,IAAM,kCAAN,MAAsF;AAAA,EAMzF,YAAoB,SAAkC;AAAlC;AALpB,wBAAQ,wBAAmF,IAAW,qBAAoD;AAC1J,wBAAS,uBAA4E,KAAK,qBAAqB;AAE/G;AAGI,YAAQ,IAAI,qBAAW;AACvB,SAAK,UAAU;AACf,SAAK,OAAO;AAAA,MACR;AAAA,QACI,IAAI,IAAG,oBAAI,KAAK,GAAE,QAAQ,IAAE;AAAA,QAAK,OAAO;AAAA,QAAO,cAAc;AAAA,QAC7D,UAAU;AAAA,UACN,OAAY,WAAK,WAAW,MAAM,kCAAkC;AAAA,UACpE,MAAW,WAAK,WAAW,MAAM,gCAAgC;AAAA,QACrE;AAAA,QACA,UAAU,CAAC;AAAA,QAAG,kBAAyB,iCAAyB;AAAA,QAChE,SAAS;AAAA,UACL,OAAO;AAAA,UACP,SAAS;AAAA,QACb;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EAIA,YAAY,SAAmE;AAC3E,WAAO;AAAA,EACX;AAAA,EAEA,YAAY,SAAyE;AACjF,QAAI,SAAS;AACT,aAAO,QAAQ;AAAA,IACnB,OAAO;AACH,aAAO,KAAK;AAAA,IAChB;AAAA,EACJ;AAEJ;AAEO,SAAS,gBAAgB,SAAkC;AAE9D,4BAA0B,IAAI,gCAAgC,OAAO;AAGrE,UAAQ,cAAc,KAAY,eAAO,yBAAyB,mBAAmB,uBAAuB,CAAC;AAG7G,UAAQ,cAAc,KAAY,iBAAS,gBAAgB,mBAAmB,MAAM;AAChF,YAAQ,IAAI,gCAAO;AACnB,UAAM,UAAsB,mBAAW,aAAa,0BAA0B;AAC9E,UAAM,cAAc,QAAQ;AAE5B,UAAM,MAAM;AACZ,gBAAY,cAAc,GAAG;AAAA,EACjC,CAAC,CAAC;AAEN;;;ACzEA,IAAAC,UAAwB;AACxB,IAAAC,QAAsB;AAGf,IAAI,yBAAgE;AACpE,IAAM,iCAAN,MAAqF;AAAA,EAGxF,YAAoB,SAAkC;AAAlC;AAFpB;AAGI,UAAM,eAAe,KAAK,QAAQ,YAAY,IAAY,qBAAqB;AAC/E,SAAK,UAAU;AACf,QAAI,cAAc;AACd,YAAM,aAAa,KAAK,MAAM,YAAY;AAC1C,WAAK,OAAO;AAAA,IAChB,OAAO;AACH,WAAK,OAAO;AAAA,QACR;AAAA,UACI,IAAI,IAAG,oBAAI,KAAK,GAAE,QAAQ,IAAE;AAAA,UAAK,OAAO;AAAA,UAAM,cAAc;AAAA,UAC5D,UAAU;AAAA,YACN,OAAY,WAAK,WAAW,MAAM,0BAA0B;AAAA,YAC5D,MAAW,WAAK,WAAW,MAAM,yBAAyB;AAAA,UAC9D;AAAA,UACA,UAAU,CAAC;AAAA,UAAG,kBAAyB,iCAAyB;AAAA,UAChE,SAAS;AAAA,YACL,OAAO;AAAA,YACP,SAAS;AAAA,YACT,WAAW,CAAC;AAAA,UAChB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,IAAI,KAAK,IAAI;AAAA,EACzB;AAAA,EAGA,YAAY,SAAmE;AAC3E,WAAO;AAAA,EACX;AAAA,EAEA,YAAY,SAAyE;AACjF,QAAI,SAAS;AACT,aAAO,QAAQ;AAAA,IACnB,OAAO;AACH,aAAO,KAAK;AAAA,IAChB;AAAA,EACJ;AACJ;AAEO,SAAS,mBAAmB,SAAkC;AAEjE,2BAAyB,IAAI,+BAA+B,OAAO;AAGnE,UAAQ,cAAc,KAAY,eAAO,yBAAyB,cAAc,sBAAsB,CAAC;AAGvG,UAAQ,cAAc,KAAY,iBAAS,gBAAgB,yBAAyB,CAAC,SAAsB;AACvG,YAAQ,IAAI,0BAAM;AAClB,IAAO,iBAAS,eAAe,iCAAiC,uBAAuB;AAAA,EAC3F,CAAC,CAAC;AAEN;;;AC7DA,IAAAC,UAAwB;AACxB,IAAAC,QAAsB;AAGf,IAAI,0BAAkE;AAEtE,IAAM,kCAAN,MAAsF;AAAA,EAMzF,YAAoB,SAAkC;AAAlC;AALpB,wBAAQ,wBAAmF,IAAW,qBAAoD;AAC1J,wBAAS,uBAA4E,KAAK,qBAAqB;AAE/G;AAGI,SAAK,UAAU;AACf,UAAM,kBAAiB,IAAG,oBAAI,KAAK,GAAE,QAAQ,IAAE;AAC/C,UAAM,uBAAsB,IAAG,oBAAI,KAAK,GAAE,QAAQ,IAAE;AACpD,UAAM,gBAAgB;AACtB,SAAK,OAAO;AAAA,MACR;AAAA,QACI,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,cAAc;AAAA,QACd,UAAU;AAAA,UACN,OAAY,WAAK,WAAW,MAAM,gCAAgC;AAAA,UAClE,MAAW,WAAK,WAAW,MAAM,8BAA8B;AAAA,QACnE;AAAA,QACA,UAAU,CAAC;AAAA,QAAG,kBAAyB,iCAAyB;AAAA,QAChE,SAAS;AAAA,UACL,OAAO;AAAA,UACP,SAAS;AAAA,UACT,WAAW,CAAC;AAAA,YACR,IAAI;AAAA,YACJ,cAAc;AAAA,YACd,OAAO;AAAA,UACX,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EAIA,YAAY,SAAmE;AAC3E,WAAO;AAAA,EACX;AAAA,EAEA,YAAY,SAAyE;AACjF,QAAI,SAAS;AACT,aAAO,QAAQ;AAAA,IACnB,OAAO;AACH,aAAO,KAAK;AAAA,IAChB;AAAA,EACJ;AACJ;AAEO,SAAS,qBAAqB,SAAkC;AAEnE,4BAA0B,IAAI,gCAAgC,OAAO;AAGrE,UAAQ,cAAc,KAAY,eAAO,yBAAyB,yBAAyB,uBAAuB,CAAC;AAGnH,UAAQ,cAAc,KAAY,iBAAS,gBAAgB,sBAAsB,CAAC,SAAS;AACvF,gBAAY,SAAS,KAAK,IAAI,4BAAQ,QAAQ,IAAI,iBAAiB,cAAc;AAAA,EACrF,CAAC,CAAC;AAEN;;;AXzDA,IAAAC,QAAsB;AACtB,aAAwB;AAGjB,SAAS,SAAS,SAAkC;AAC1D,UAAQ,IAAI,2BAA2B;AAEpC,EAAO,cAAO,EAAE,MAAY,cAAQ,WAAW,SAAS,EAAC,CAAC;AAE7D,6BAAmB,OAAO;AAG1B,kBAAgB,OAAO;AAEvB,uBAAqB,OAAO;AAE5B,uBAAqB,OAAO;AAE5B,qBAAmB,OAAO;AAG1B,cAAY,OAAO;AASpB;AAGO,SAAS,aAAa;AAC5B,UAAQ,IAAI,yBAAyB;AAEtC;",
  "names": ["module", "error", "path", "stdout", "stderr", "module", "module", "fs", "path", "config", "vscode", "vscode", "path", "vscode", "path", "vscode", "path", "vscode", "fs", "path", "config", "resolve", "vscode", "path", "vscode", "path", "vscode", "path", "path"]
}
